{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9","program":"/home/rychmc/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","crossbeam_epoch","--edition=2018","/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"once_cell\"","--cfg","feature=\"std\"","-C","metadata=9ea2f20bc9e2a0ba","-C","extra-filename=-9ea2f20bc9e2a0ba","--out-dir","/home/rychmc/Documents/_Rubicon/_Live/v2rs/data/635/exchange/target/rls/debug/deps","-L","dependency=/home/rychmc/Documents/_Rubicon/_Live/v2rs/data/635/exchange/target/rls/debug/deps","--extern","cfg_if=/home/rychmc/Documents/_Rubicon/_Live/v2rs/data/635/exchange/target/rls/debug/deps/libcfg_if-87c284443f3cd509.rmeta","--extern","crossbeam_utils=/home/rychmc/Documents/_Rubicon/_Live/v2rs/data/635/exchange/target/rls/debug/deps/libcrossbeam_utils-d8a91a7a3310b78b.rmeta","--extern","memoffset=/home/rychmc/Documents/_Rubicon/_Live/v2rs/data/635/exchange/target/rls/debug/deps/libmemoffset-f96d283dc336c759.rmeta","--extern","once_cell=/home/rychmc/Documents/_Rubicon/_Live/v2rs/data/635/exchange/target/rls/debug/deps/libonce_cell-6463ac882b19970a.rmeta","--extern","scopeguard=/home/rychmc/Documents/_Rubicon/_Live/v2rs/data/635/exchange/target/rls/debug/deps/libscopeguard-d112f6df1de5e13a.rmeta","--cap-lints","allow","--cfg","crossbeam_const_fn_trait_bound","--error-format=json","--sysroot","/home/rychmc/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/rychmc/Documents/_Rubicon/_Live/v2rs/data/635/exchange/target/rls/debug/deps/libcrossbeam_epoch-9ea2f20bc9e2a0ba.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_epoch","disambiguator":[2756099775996309329,0]},"crate_root":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src","external_crates":[{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18009504021925498586,0]}},{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[4529231008568630066,0]}},{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6454353934602915994,0]}},{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4068501274341658802,0]}},{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6477578750782050620,0]}},{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[8891903781499800355,0]}},{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5820604803307051361,0]}},{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8495696488133152618,0]}},{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[573130743634949162,0]}},{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[194626158685852222,0]}},{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[6912020744921273940,0]}},{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[6083063236018227814,0]}},{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[4457149757231420433,0]}},{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[17193898272045318619,0]}},{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[16816495372639671287,0]}},{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[18018821183479052995,0]}},{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[8471467948192562461,0]}},{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[10516304001967857410,0]}},{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[14599081442512269196,0]}},{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","num":20,"id":{"name":"cfg_if","disambiguator":[16971327672742534159,0]}},{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","num":21,"id":{"name":"crossbeam_utils","disambiguator":[7717467420516614408,0]}},{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/default.rs","num":22,"id":{"name":"once_cell","disambiguator":[15098439178504385864,0]}},{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","num":23,"id":{"name":"scopeguard","disambiguator":[17702550169796644340,0]}},{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","num":24,"id":{"name":"memoffset","disambiguator":[16495884658706006874,0]}}],"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":0,"byte_end":6324,"line_start":1,"line_end":169,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":127},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":5873,"byte_end":5882,"line_start":153,"line_end":153,"column_start":13,"column_end":22},"alias_span":null,"name":"Pointable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":161},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":5884,"byte_end":5890,"line_start":153,"line_end":153,"column_start":24,"column_end":30},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":100},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":5892,"byte_end":5912,"line_start":153,"line_end":153,"column_start":32,"column_end":52},"alias_span":null,"name":"CompareExchangeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":246},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":5926,"byte_end":5931,"line_start":154,"line_end":154,"column_start":13,"column_end":18},"alias_span":null,"name":"Owned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":242},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":5933,"byte_end":5940,"line_start":154,"line_end":154,"column_start":20,"column_end":27},"alias_span":null,"name":"Pointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":300},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":5942,"byte_end":5948,"line_start":154,"line_end":154,"column_start":29,"column_end":35},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":371},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":5995,"byte_end":6004,"line_start":156,"line_end":156,"column_start":35,"column_end":44},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":387},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":6006,"byte_end":6017,"line_start":156,"line_end":156,"column_start":46,"column_end":57},"alias_span":null,"name":"LocalHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":499},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":6050,"byte_end":6061,"line_start":157,"line_end":157,"column_start":31,"column_end":42},"alias_span":null,"name":"unprotected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":475},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":6063,"byte_end":6068,"line_start":157,"line_end":157,"column_start":44,"column_end":49},"alias_span":null,"name":"Guard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":96},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":6132,"byte_end":6150,"line_start":160,"line_end":160,"column_start":32,"column_end":50},"alias_span":null,"name":"CompareAndSetError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":110},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":6152,"byte_end":6173,"line_start":160,"line_end":160,"column_start":52,"column_end":73},"alias_span":null,"name":"CompareAndSetOrdering","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":893},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":6281,"byte_end":6298,"line_start":167,"line_end":167,"column_start":33,"column_end":50},"alias_span":null,"name":"default_collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":891},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":6300,"byte_end":6309,"line_start":167,"line_end":167,"column_start":52,"column_end":61},"alias_span":null,"name":"is_pinned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":889},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":6311,"byte_end":6314,"line_start":167,"line_end":167,"column_start":63,"column_end":66},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":0,"byte_end":6324,"line_start":1,"line_end":169,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":354},{"krate":0,"index":397},{"krate":0,"index":434},{"krate":0,"index":453},{"krate":0,"index":505},{"krate":0,"index":650},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":789},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":796},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":803},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":871},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":903},{"krate":0,"index":906}],"decl_id":null,"docs":" Epoch-based memory reclamation.","sig":null,"attributes":[{"value":"/ Epoch-based memory reclamation.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An interesting problem concurrent collections deal with comes from the remove operation.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":40,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ Suppose that a thread removes an element from a lock-free map, while another thread is reading","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":133,"byte_end":231,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ that same element at the same time. The first thread must wait until the second thread stops","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":232,"byte_end":328,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ reading the element. Only then it is safe to destruct it.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":329,"byte_end":390,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":391,"byte_end":394,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Programming languages that come with garbage collectors solve this problem trivially. The","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":395,"byte_end":488,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ garbage collector will destruct the removed element when no thread can hold a reference to it","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":489,"byte_end":586,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ anymore.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":587,"byte_end":599,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":600,"byte_end":603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate implements a basic memory reclamation mechanism, which is based on epochs. When an","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":604,"byte_end":701,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ element gets removed from a concurrent collection, it is inserted into a pile of garbage and","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":702,"byte_end":798,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ marked with the current epoch. Every time a thread accesses a collection, it checks the current","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":799,"byte_end":898,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ epoch, attempts to increment it, and destructs some garbage that became so old that no thread","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":899,"byte_end":996,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ can be referencing it anymore.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":997,"byte_end":1031,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1032,"byte_end":1035,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ That is the general mechanism behind epoch-based memory reclamation, but the details are a bit","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1036,"byte_end":1134,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ more complicated. Anyhow, memory reclamation is designed to be fully automatic and something","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1135,"byte_end":1231,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ users of concurrent collections don't have to worry much about.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1232,"byte_end":1299,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1300,"byte_end":1303,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Pointers","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1304,"byte_end":1318,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1319,"byte_end":1322,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Concurrent collections are built using atomic pointers. This module provides [`Atomic`], which","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1323,"byte_end":1421,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ is just a shared atomic pointer to a heap-allocated object. Loading an [`Atomic`] yields a","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1422,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ [`Shared`], which is an epoch-protected pointer through which the loaded object can be safely","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1517,"byte_end":1614,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ read.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1615,"byte_end":1624,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1625,"byte_end":1628,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1629,"byte_end":1642,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1643,"byte_end":1646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Before an [`Atomic`] can be loaded, a participant must be [`pin`]ned. By pinning a participant","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1647,"byte_end":1745,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ we declare that any object that gets removed from now on must not be destructed just","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1746,"byte_end":1834,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ yet. Garbage collection of newly removed objects is suspended until the participant gets","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1835,"byte_end":1927,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ unpinned.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1928,"byte_end":1941,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1942,"byte_end":1945,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Garbage","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1946,"byte_end":1959,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1960,"byte_end":1963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Objects that get removed from concurrent collections must be stashed away until all currently","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":1964,"byte_end":2061,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ pinned participants get unpinned. Such objects can be stored into a thread-local or global","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":2062,"byte_end":2156,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ storage, where they are kept until the right time for their destruction comes.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":2157,"byte_end":2239,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":2240,"byte_end":2243,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ There is a global shared instance of garbage queue. You can [`defer`](Guard::defer) the execution of an","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":2244,"byte_end":2351,"line_start":42,"line_end":42,"column_start":1,"column_end":108}},{"value":"/ arbitrary function until the global epoch is advanced enough. Most notably, concurrent data","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":2352,"byte_end":2447,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"/ structures may defer the deallocation of an object.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":2448,"byte_end":2503,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":2504,"byte_end":2507,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # APIs","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":2508,"byte_end":2518,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":2519,"byte_end":2522,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ For majority of use cases, just use the default garbage collector by invoking [`pin`]. If you","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":2523,"byte_end":2620,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"/ want to create your own garbage collector, use the [`Collector`] API.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":2621,"byte_end":2694,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":2855,"byte_end":2961,"line_start":58,"line_end":63,"column_start":1,"column_end":3}}]},{"kind":"Type","id":{"krate":0,"index":96},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14163846,"byte_end":14163864,"line_start":31,"line_end":31,"column_start":10,"column_end":28},"name":"CompareAndSetError","qualname":"::atomic::CompareAndSetError","value":"CompareExchangeError","parent":null,"children":[],"decl_id":null,"docs":" The error returned on failed compare-and-set operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-set operation.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14163675,"byte_end":14163734,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"deprecated(note = \"Use `CompareExchangeError` instead\")","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14163778,"byte_end":14163836,"line_start":30,"line_end":30,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":100},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14163982,"byte_end":14164002,"line_start":34,"line_end":34,"column_start":12,"column_end":32},"name":"CompareExchangeError","qualname":"::atomic::CompareExchangeError","value":"CompareExchangeError { current, new }","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105}],"decl_id":null,"docs":" The error returned on failed compare-and-swap operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-swap operation.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14163910,"byte_end":14163970,"line_start":33,"line_end":33,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":104},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14164132,"byte_end":14164139,"line_start":36,"line_end":36,"column_start":9,"column_end":16},"name":"current","qualname":"::atomic::CompareExchangeError::current","value":"atomic::Shared<'g, T>","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" The value in the atomic pointer at the time of the failed operation.\n","sig":null,"attributes":[{"value":"/ The value in the atomic pointer at the time of the failed operation.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14164051,"byte_end":14164123,"line_start":35,"line_end":35,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":105},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14164225,"byte_end":14164228,"line_start":39,"line_end":39,"column_start":9,"column_end":12},"name":"new","qualname":"::atomic::CompareExchangeError::new","value":"P","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" The new value, which the operation failed to store.\n","sig":null,"attributes":[{"value":"/ The new value, which the operation failed to store.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14164161,"byte_end":14164216,"line_start":38,"line_end":38,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14164327,"byte_end":14164330,"line_start":43,"line_end":43,"column_start":8,"column_end":11},"name":"fmt","qualname":"<CompareExchangeError as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":110},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14165339,"byte_end":14165360,"line_start":67,"line_end":67,"column_start":11,"column_end":32},"name":"CompareAndSetOrdering","qualname":"::atomic::CompareAndSetOrdering","value":"CompareAndSetOrdering","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112}],"decl_id":null,"docs":" Memory orderings for compare-and-set operations.","sig":null,"attributes":[{"value":"/ Memory orderings for compare-and-set operations.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14164543,"byte_end":14164595,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14164596,"byte_end":14164599,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ A compare-and-set operation can have different memory orderings depending on whether it","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14164600,"byte_end":14164691,"line_start":53,"line_end":53,"column_start":1,"column_end":92}},{"value":"/ succeeds or fails. This trait generalizes different ways of specifying memory orderings.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14164692,"byte_end":14164784,"line_start":54,"line_end":54,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14164785,"byte_end":14164788,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The two ways of specifying orderings for compare-and-set are:","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14164789,"byte_end":14164854,"line_start":56,"line_end":56,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14164855,"byte_end":14164858,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ 1. Just one `Ordering` for the success case. In case of failure, the strongest appropriate","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14164859,"byte_end":14164953,"line_start":58,"line_end":58,"column_start":1,"column_end":95}},{"value":"/    ordering is chosen.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14164954,"byte_end":14164980,"line_start":59,"line_end":59,"column_start":1,"column_end":27}},{"value":"/ 2. A pair of `Ordering`s. The first one is for the success case, while the second one is","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14164981,"byte_end":14165073,"line_start":60,"line_end":60,"column_start":1,"column_end":93}},{"value":"/    for the failure case.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14165074,"byte_end":14165102,"line_start":61,"line_end":61,"column_start":1,"column_end":29}},{"value":"deprecated(note =\n\"`compare_and_set` and `compare_and_set_weak` that use this trait are deprecated, \\\n            use `compare_exchange` or `compare_exchange_weak instead`\")","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14165146,"byte_end":14165328,"line_start":63,"line_end":66,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14165426,"byte_end":14165433,"line_start":69,"line_end":69,"column_start":8,"column_end":15},"name":"success","qualname":"::atomic::CompareAndSetOrdering::success","value":"fn success(&Self) -> Ordering","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" The ordering of the operation when it succeeds.\n","sig":null,"attributes":[{"value":"/ The ordering of the operation when it succeeds.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14165367,"byte_end":14165418,"line_start":68,"line_end":68,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14165651,"byte_end":14165658,"line_start":75,"line_end":75,"column_start":8,"column_end":15},"name":"failure","qualname":"::atomic::CompareAndSetOrdering::failure","value":"fn failure(&Self) -> Ordering","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" The ordering of the operation when it fails.","sig":null,"attributes":[{"value":"/ The ordering of the operation when it fails.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14165459,"byte_end":14165507,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14165512,"byte_end":14165515,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The failure ordering can't be `Release` or `AcqRel` and must be equivalent or weaker than","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14165520,"byte_end":14165613,"line_start":73,"line_end":73,"column_start":5,"column_end":98}},{"value":"/ the success ordering.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14165618,"byte_end":14165643,"line_start":74,"line_end":74,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14165766,"byte_end":14165773,"line_start":81,"line_end":81,"column_start":8,"column_end":15},"name":"success","qualname":"<Ordering as atomic::CompareAndSetOrdering>::success","value":"fn success(&Self) -> Ordering","parent":{"krate":0,"index":110},"children":[],"decl_id":{"krate":0,"index":111},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14165749,"byte_end":14165758,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14165837,"byte_end":14165844,"line_start":86,"line_end":86,"column_start":8,"column_end":15},"name":"failure","qualname":"<Ordering as atomic::CompareAndSetOrdering>::failure","value":"fn failure(&Self) -> Ordering","parent":{"krate":0,"index":110},"children":[],"decl_id":{"krate":0,"index":112},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14165820,"byte_end":14165829,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14166013,"byte_end":14166020,"line_start":94,"line_end":94,"column_start":8,"column_end":15},"name":"success","qualname":"<(Ordering, Ordering) as atomic::CompareAndSetOrdering>::success","value":"fn success(&Self) -> Ordering","parent":{"krate":0,"index":110},"children":[],"decl_id":{"krate":0,"index":111},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14165996,"byte_end":14166005,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14166085,"byte_end":14166092,"line_start":99,"line_end":99,"column_start":8,"column_end":15},"name":"failure","qualname":"<(Ordering, Ordering) as atomic::CompareAndSetOrdering>::failure","value":"fn failure(&Self) -> Ordering","parent":{"krate":0,"index":110},"children":[],"decl_id":{"krate":0,"index":112},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14166068,"byte_end":14166077,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":127},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14168008,"byte_end":14168017,"line_start":150,"line_end":150,"column_start":11,"column_end":20},"name":"Pointable","qualname":"::atomic::Pointable","value":"Pointable","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":135}],"decl_id":null,"docs":" Types that are pointed to by a single word.","sig":null,"attributes":[{"value":"/ Types that are pointed to by a single word.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14167035,"byte_end":14167082,"line_start":130,"line_end":130,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14167083,"byte_end":14167086,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ In concurrent programming, it is necessary to represent an object within a word because atomic","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14167087,"byte_end":14167185,"line_start":132,"line_end":132,"column_start":1,"column_end":99}},{"value":"/ operations (e.g., reads, writes, read-modify-writes) support only single words.  This trait","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14167186,"byte_end":14167281,"line_start":133,"line_end":133,"column_start":1,"column_end":96}},{"value":"/ qualifies such types that are pointed to by a single word.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14167282,"byte_end":14167344,"line_start":134,"line_end":134,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14167345,"byte_end":14167348,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ The trait generalizes `Box<T>` for a sized type `T`.  In a box, an object of type `T` is","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14167349,"byte_end":14167441,"line_start":136,"line_end":136,"column_start":1,"column_end":93}},{"value":"/ allocated in heap and it is owned by a single-word pointer.  This trait is also implemented for","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14167442,"byte_end":14167541,"line_start":137,"line_end":137,"column_start":1,"column_end":100}},{"value":"/ `[MaybeUninit<T>]` by storing its size along with its elements and pointing to the pair of array","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14167542,"byte_end":14167642,"line_start":138,"line_end":138,"column_start":1,"column_end":101}},{"value":"/ size and elements.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14167643,"byte_end":14167665,"line_start":139,"line_end":139,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14167666,"byte_end":14167669,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ Pointers to `Pointable` types can be stored in [`Atomic`], [`Owned`], and [`Shared`].  In","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14167670,"byte_end":14167763,"line_start":141,"line_end":141,"column_start":1,"column_end":94}},{"value":"/ particular, Crossbeam supports dynamically sized slices as follows.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14167764,"byte_end":14167835,"line_start":142,"line_end":142,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14167836,"byte_end":14167839,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14167840,"byte_end":14167847,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ use std::mem::MaybeUninit;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14167848,"byte_end":14167878,"line_start":145,"line_end":145,"column_start":1,"column_end":31}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14167879,"byte_end":14167910,"line_start":146,"line_end":146,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14167911,"byte_end":14167914,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ let o = Owned::<[MaybeUninit<i32>]>::init(10); // allocating [i32; 10]","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14167915,"byte_end":14167989,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14167990,"byte_end":14167997,"line_start":149,"line_end":149,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":128},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14168064,"byte_end":14168069,"line_start":152,"line_end":152,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::atomic::Pointable::ALIGN","value":"usize","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" The alignment of pointer.\n","sig":null,"attributes":[{"value":"/ The alignment of pointer.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14168024,"byte_end":14168053,"line_start":151,"line_end":151,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":129},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14168123,"byte_end":14168127,"line_start":155,"line_end":155,"column_start":10,"column_end":14},"name":"Init","qualname":"::atomic::Pointable::Init","value":"type Init;","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" The type for initializers.\n","sig":null,"attributes":[{"value":"/ The type for initializers.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14168083,"byte_end":14168113,"line_start":154,"line_end":154,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14168279,"byte_end":14168283,"line_start":162,"line_end":162,"column_start":15,"column_end":19},"name":"init","qualname":"::atomic::Pointable::init","value":"unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Initializes a with the given initializer.","sig":null,"attributes":[{"value":"/ Initializes a with the given initializer.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14168134,"byte_end":14168179,"line_start":157,"line_end":157,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14168184,"byte_end":14168187,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14168192,"byte_end":14168204,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14168209,"byte_end":14168212,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The result should be a multiple of `ALIGN`.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14168217,"byte_end":14168264,"line_start":161,"line_end":161,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14168647,"byte_end":14168652,"line_start":171,"line_end":171,"column_start":15,"column_end":20},"name":"deref","qualname":"::atomic::Pointable::deref","value":"unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Dereferences the given pointer.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14168317,"byte_end":14168352,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14168357,"byte_end":14168360,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14168365,"byte_end":14168377,"line_start":166,"line_end":166,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14168382,"byte_end":14168385,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14168390,"byte_end":14168466,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14168471,"byte_end":14168539,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be mutably dereferenced by [`Pointable::deref_mut`] concurrently.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14168544,"byte_end":14168632,"line_start":170,"line_end":170,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14169051,"byte_end":14169060,"line_start":181,"line_end":181,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"::atomic::Pointable::deref_mut","value":"unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Mutably dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Mutably dereferences the given pointer.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14168687,"byte_end":14168730,"line_start":173,"line_end":173,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14168735,"byte_end":14168738,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14168743,"byte_end":14168755,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14168760,"byte_end":14168763,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14168768,"byte_end":14168844,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14168849,"byte_end":14168917,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14168922,"byte_end":14169012,"line_start":179,"line_end":179,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14169017,"byte_end":14169036,"line_start":180,"line_end":180,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14169473,"byte_end":14169477,"line_start":191,"line_end":191,"column_start":15,"column_end":19},"name":"drop","qualname":"::atomic::Pointable::drop","value":"unsafe fn drop(usize)","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Drops the object pointed to by the given pointer.","sig":null,"attributes":[{"value":"/ Drops the object pointed to by the given pointer.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14169099,"byte_end":14169152,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14169157,"byte_end":14169160,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14169165,"byte_end":14169177,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14169182,"byte_end":14169185,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14169190,"byte_end":14169266,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14169271,"byte_end":14169339,"line_start":188,"line_end":188,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14169344,"byte_end":14169434,"line_start":189,"line_end":189,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14169439,"byte_end":14169458,"line_start":190,"line_end":190,"column_start":5,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":138},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14169530,"byte_end":14169535,"line_start":195,"line_end":195,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::<T as atomic::Pointable>::ALIGN","value":"usize","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14169602,"byte_end":14169606,"line_start":199,"line_end":199,"column_start":15,"column_end":19},"name":"init","qualname":"<T as atomic::Pointable>::init","value":"unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":127},"children":[],"decl_id":{"krate":0,"index":130},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14169704,"byte_end":14169709,"line_start":203,"line_end":203,"column_start":15,"column_end":20},"name":"deref","qualname":"<T as atomic::Pointable>::deref","value":"unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":127},"children":[],"decl_id":{"krate":0,"index":131},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14169789,"byte_end":14169798,"line_start":207,"line_end":207,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"<T as atomic::Pointable>::deref_mut","value":"unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":127},"children":[],"decl_id":{"krate":0,"index":133},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14169884,"byte_end":14169888,"line_start":211,"line_end":211,"column_start":15,"column_end":19},"name":"drop","qualname":"<T as atomic::Pointable>::drop","value":"unsafe fn drop(usize)","parent":{"krate":0,"index":127},"children":[],"decl_id":{"krate":0,"index":135},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":153},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14170817,"byte_end":14170822,"line_start":247,"line_end":247,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::<[std::mem::MaybeUninit<T>] as atomic::Pointable>::ALIGN","value":"usize","parent":{"krate":0,"index":151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14170900,"byte_end":14170904,"line_start":251,"line_end":251,"column_start":15,"column_end":19},"name":"init","qualname":"<[MaybeUninit<T>] as atomic::Pointable>::init","value":"unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":127},"children":[],"decl_id":{"krate":0,"index":130},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14171354,"byte_end":14171359,"line_start":263,"line_end":263,"column_start":15,"column_end":20},"name":"deref","qualname":"<[MaybeUninit<T>] as atomic::Pointable>::deref","value":"unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":127},"children":[],"decl_id":{"krate":0,"index":131},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14171537,"byte_end":14171546,"line_start":268,"line_end":268,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"<[MaybeUninit<T>] as atomic::Pointable>::deref_mut","value":"unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":127},"children":[],"decl_id":{"krate":0,"index":133},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14171728,"byte_end":14171732,"line_start":273,"line_end":273,"column_start":15,"column_end":19},"name":"drop","qualname":"<[MaybeUninit<T>] as atomic::Pointable>::drop","value":"unsafe fn drop(usize)","parent":{"krate":0,"index":127},"children":[],"decl_id":{"krate":0,"index":135},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":161},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14172586,"byte_end":14172592,"line_start":291,"line_end":291,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::atomic::Atomic","value":"Atomic {  }","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164}],"decl_id":null,"docs":" An atomic pointer that can be safely shared between threads.","sig":null,"attributes":[{"value":"/ An atomic pointer that can be safely shared between threads.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14172068,"byte_end":14172132,"line_start":282,"line_end":282,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14172133,"byte_end":14172136,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14172137,"byte_end":14172235,"line_start":284,"line_end":284,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address. For example, the tag for a pointer to a sized type `T`","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14172236,"byte_end":14172333,"line_start":285,"line_end":285,"column_start":1,"column_end":98}},{"value":"/ should be less than `(1 << mem::align_of::<T>().trailing_zeros())`.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14172334,"byte_end":14172405,"line_start":286,"line_end":286,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14172406,"byte_end":14172409,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ Any method that loads the pointer must be passed a reference to a [`Guard`].","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14172410,"byte_end":14172490,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14172491,"byte_end":14172494,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ Crossbeam supports dynamically sized types.  See [`Pointable`] for details.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14172495,"byte_end":14172574,"line_start":290,"line_end":290,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14173078,"byte_end":14173081,"line_start":309,"line_end":309,"column_start":12,"column_end":15},"name":"new","qualname":"<Atomic<T>>::new","value":"fn new(T) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14172845,"byte_end":14172927,"line_start":300,"line_end":300,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14172932,"byte_end":14172935,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14172940,"byte_end":14172954,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14172959,"byte_end":14172962,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14172967,"byte_end":14172974,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14172979,"byte_end":14173011,"line_start":305,"line_end":305,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14173016,"byte_end":14173019,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14173024,"byte_end":14173054,"line_start":307,"line_end":307,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14173059,"byte_end":14173066,"line_start":308,"line_end":308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14173425,"byte_end":14173429,"line_start":324,"line_end":324,"column_start":12,"column_end":16},"name":"init","qualname":"<Atomic<T>>::init","value":"fn init(T::Init) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14173184,"byte_end":14173266,"line_start":315,"line_end":315,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14173271,"byte_end":14173274,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14173279,"byte_end":14173293,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14173298,"byte_end":14173301,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14173306,"byte_end":14173313,"line_start":319,"line_end":319,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14173318,"byte_end":14173350,"line_start":320,"line_end":320,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14173355,"byte_end":14173358,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::init(1234);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14173363,"byte_end":14173401,"line_start":322,"line_end":322,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14173406,"byte_end":14173413,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14174002,"byte_end":14174006,"line_start":346,"line_end":346,"column_start":18,"column_end":22},"name":"null","qualname":"<Atomic<T>>::null","value":"const fn null() -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null atomic pointer.","sig":null,"attributes":[{"value":"/ Returns a new null atomic pointer.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14173734,"byte_end":14173772,"line_start":336,"line_end":336,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14173777,"byte_end":14173780,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14173785,"byte_end":14173799,"line_start":338,"line_end":338,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14173804,"byte_end":14173807,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14173812,"byte_end":14173819,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14173824,"byte_end":14173856,"line_start":341,"line_end":341,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14173861,"byte_end":14173864,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::null();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14173869,"byte_end":14173903,"line_start":343,"line_end":343,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14173908,"byte_end":14173915,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"cfg(all(crossbeam_const_fn_trait_bound, not(crossbeam_loom)))","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14173920,"byte_end":14173984,"line_start":345,"line_end":345,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14174846,"byte_end":14174850,"line_start":377,"line_end":377,"column_start":12,"column_end":16},"name":"load","qualname":"<Atomic<T>>::load","value":"fn load<'g>(&Self, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14174388,"byte_end":14174433,"line_start":362,"line_end":362,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14174438,"byte_end":14174441,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14174446,"byte_end":14174536,"line_start":364,"line_end":364,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14174541,"byte_end":14174555,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14174560,"byte_end":14174563,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14174568,"byte_end":14174582,"line_start":367,"line_end":367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14174587,"byte_end":14174590,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14174595,"byte_end":14174602,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14174607,"byte_end":14174656,"line_start":370,"line_end":370,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14174661,"byte_end":14174705,"line_start":371,"line_end":371,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14174710,"byte_end":14174713,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14174718,"byte_end":14174748,"line_start":373,"line_end":373,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14174753,"byte_end":14174783,"line_start":374,"line_end":374,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14174788,"byte_end":14174822,"line_start":375,"line_end":375,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14174827,"byte_end":14174834,"line_start":376,"line_end":376,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14175857,"byte_end":14175869,"line_start":402,"line_end":402,"column_start":12,"column_end":24},"name":"load_consume","qualname":"<Atomic<T>>::load_consume","value":"fn load_consume<'g>(&Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14174980,"byte_end":14175059,"line_start":381,"line_end":381,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14175064,"byte_end":14175067,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14175072,"byte_end":14175145,"line_start":383,"line_end":383,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14175150,"byte_end":14175226,"line_start":384,"line_end":384,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14175231,"byte_end":14175302,"line_start":385,"line_end":385,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14175307,"byte_end":14175381,"line_start":386,"line_end":386,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14175386,"byte_end":14175409,"line_start":387,"line_end":387,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14175414,"byte_end":14175417,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14175422,"byte_end":14175497,"line_start":389,"line_end":389,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14175502,"byte_end":14175576,"line_start":390,"line_end":390,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14175581,"byte_end":14175615,"line_start":391,"line_end":391,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14175620,"byte_end":14175623,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14175628,"byte_end":14175642,"line_start":393,"line_end":393,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14175647,"byte_end":14175650,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14175655,"byte_end":14175662,"line_start":395,"line_end":395,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14175667,"byte_end":14175716,"line_start":396,"line_end":396,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14175721,"byte_end":14175724,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14175729,"byte_end":14175759,"line_start":398,"line_end":398,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14175764,"byte_end":14175794,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/ let p = a.load_consume(guard);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14175799,"byte_end":14175833,"line_start":400,"line_end":400,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14175838,"byte_end":14175845,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14176477,"byte_end":14176482,"line_start":421,"line_end":421,"column_start":12,"column_end":17},"name":"store","qualname":"<Atomic<T>>::store","value":"fn store<P>(&Self, P, Ordering) where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14175989,"byte_end":14176054,"line_start":406,"line_end":406,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14176059,"byte_end":14176062,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14176067,"byte_end":14176157,"line_start":408,"line_end":408,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14176162,"byte_end":14176176,"line_start":409,"line_end":409,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14176181,"byte_end":14176184,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14176189,"byte_end":14176203,"line_start":411,"line_end":411,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14176208,"byte_end":14176211,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14176216,"byte_end":14176223,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Owned, Shared};","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14176228,"byte_end":14176277,"line_start":414,"line_end":414,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14176282,"byte_end":14176326,"line_start":415,"line_end":415,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14176331,"byte_end":14176334,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14176339,"byte_end":14176369,"line_start":417,"line_end":417,"column_start":5,"column_end":35}},{"value":"/ a.store(Shared::null(), SeqCst);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14176374,"byte_end":14176410,"line_start":418,"line_end":418,"column_start":5,"column_end":41}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14176415,"byte_end":14176453,"line_start":419,"line_end":419,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14176458,"byte_end":14176465,"line_start":420,"line_end":420,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14177132,"byte_end":14177136,"line_start":441,"line_end":441,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atomic<T>>::swap","value":"fn swap<'g, P>(&Self, P, Ordering, &'g Guard) -> Shared where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous\n `Shared`.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14176589,"byte_end":14176677,"line_start":425,"line_end":425,"column_start":5,"column_end":93}},{"value":"/ `Shared`.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14176682,"byte_end":14176695,"line_start":426,"line_end":426,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14176700,"byte_end":14176703,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14176708,"byte_end":14176798,"line_start":428,"line_end":428,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14176803,"byte_end":14176817,"line_start":429,"line_end":429,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14176822,"byte_end":14176825,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14176830,"byte_end":14176844,"line_start":431,"line_end":431,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14176849,"byte_end":14176852,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14176857,"byte_end":14176864,"line_start":433,"line_end":433,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14176869,"byte_end":14176926,"line_start":434,"line_end":434,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14176931,"byte_end":14176975,"line_start":435,"line_end":435,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14176980,"byte_end":14176983,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14176988,"byte_end":14177018,"line_start":437,"line_end":437,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14177023,"byte_end":14177053,"line_start":438,"line_end":438,"column_start":5,"column_end":35}},{"value":"/ let p = a.swap(Shared::null(), SeqCst, guard);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14177058,"byte_end":14177108,"line_start":439,"line_end":439,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14177113,"byte_end":14177120,"line_start":440,"line_end":440,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14178972,"byte_end":14178988,"line_start":475,"line_end":475,"column_start":12,"column_end":28},"name":"compare_exchange","qualname":"<Atomic<T>>::compare_exchange","value":"fn compare_exchange<'g,\nP>(&Self, Shared<, T>, P, Ordering, Ordering, &'g Guard)\n-> Result<Shared, CompareExchangeError> where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14177307,"byte_end":14177403,"line_start":445,"line_end":445,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14177408,"byte_end":14177502,"line_start":446,"line_end":446,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14177507,"byte_end":14177578,"line_start":447,"line_end":447,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14177583,"byte_end":14177586,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14177591,"byte_end":14177686,"line_start":449,"line_end":449,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14177691,"byte_end":14177782,"line_start":450,"line_end":450,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14177787,"byte_end":14177800,"line_start":451,"line_end":451,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14177805,"byte_end":14177808,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14177813,"byte_end":14177882,"line_start":453,"line_end":453,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14177887,"byte_end":14177968,"line_start":454,"line_end":454,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14177973,"byte_end":14178064,"line_start":455,"line_end":455,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14178069,"byte_end":14178159,"line_start":456,"line_end":456,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14178164,"byte_end":14178246,"line_start":457,"line_end":457,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14178251,"byte_end":14178329,"line_start":458,"line_end":458,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14178334,"byte_end":14178414,"line_start":459,"line_end":459,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14178419,"byte_end":14178485,"line_start":460,"line_end":460,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14178490,"byte_end":14178493,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14178498,"byte_end":14178512,"line_start":462,"line_end":462,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14178517,"byte_end":14178520,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14178525,"byte_end":14178532,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14178537,"byte_end":14178601,"line_start":465,"line_end":465,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14178606,"byte_end":14178650,"line_start":466,"line_end":466,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14178655,"byte_end":14178658,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14178663,"byte_end":14178693,"line_start":468,"line_end":468,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14178698,"byte_end":14178701,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14178706,"byte_end":14178736,"line_start":470,"line_end":470,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14178741,"byte_end":14178778,"line_start":471,"line_end":471,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_exchange(curr, Shared::null(), SeqCst, SeqCst, guard);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14178783,"byte_end":14178862,"line_start":472,"line_end":472,"column_start":5,"column_end":84}},{"value":"/ let res2 = a.compare_exchange(curr, Owned::new(5678), SeqCst, SeqCst, guard);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14178867,"byte_end":14178948,"line_start":473,"line_end":473,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14178953,"byte_end":14178960,"line_start":474,"line_end":474,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14182022,"byte_end":14182043,"line_start":550,"line_end":550,"column_start":12,"column_end":33},"name":"compare_exchange_weak","qualname":"<Atomic<T>>::compare_exchange_weak","value":"fn compare_exchange_weak<'g,\nP>(&Self, Shared<, T>, P, Ordering, Ordering, &'g Guard)\n-> Result<Shared, CompareExchangeError> where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14179650,"byte_end":14179746,"line_start":498,"line_end":498,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14179751,"byte_end":14179845,"line_start":499,"line_end":499,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14179850,"byte_end":14179921,"line_start":500,"line_end":500,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14179926,"byte_end":14179929,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_exchange`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14179934,"byte_end":14180029,"line_start":502,"line_end":502,"column_start":5,"column_end":100}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14180034,"byte_end":14180129,"line_start":503,"line_end":503,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14180134,"byte_end":14180224,"line_start":504,"line_end":504,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14180229,"byte_end":14180313,"line_start":505,"line_end":505,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14180318,"byte_end":14180321,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14180326,"byte_end":14180395,"line_start":507,"line_end":507,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14180400,"byte_end":14180481,"line_start":508,"line_end":508,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14180486,"byte_end":14180577,"line_start":509,"line_end":509,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14180582,"byte_end":14180672,"line_start":510,"line_end":510,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14180677,"byte_end":14180759,"line_start":511,"line_end":511,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14180764,"byte_end":14180842,"line_start":512,"line_end":512,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14180847,"byte_end":14180927,"line_start":513,"line_end":513,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14180932,"byte_end":14180998,"line_start":514,"line_end":514,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181003,"byte_end":14181006,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ [`compare_exchange`]: Atomic::compare_exchange","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181011,"byte_end":14181061,"line_start":516,"line_end":516,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181066,"byte_end":14181069,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181074,"byte_end":14181088,"line_start":518,"line_end":518,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181093,"byte_end":14181096,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181101,"byte_end":14181108,"line_start":520,"line_end":520,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181113,"byte_end":14181177,"line_start":521,"line_end":521,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181182,"byte_end":14181226,"line_start":522,"line_end":522,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181231,"byte_end":14181234,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181239,"byte_end":14181269,"line_start":524,"line_end":524,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181274,"byte_end":14181304,"line_start":525,"line_end":525,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181309,"byte_end":14181312,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181317,"byte_end":14181352,"line_start":527,"line_end":527,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181357,"byte_end":14181397,"line_start":528,"line_end":528,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181402,"byte_end":14181412,"line_start":529,"line_end":529,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(ptr, new, SeqCst, SeqCst, guard) {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181417,"byte_end":14181489,"line_start":530,"line_end":530,"column_start":5,"column_end":77}},{"value":"/         Ok(p) => {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181494,"byte_end":14181516,"line_start":531,"line_end":531,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181521,"byte_end":14181545,"line_start":532,"line_end":532,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181550,"byte_end":14181572,"line_start":533,"line_end":533,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181577,"byte_end":14181590,"line_start":534,"line_end":534,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181595,"byte_end":14181620,"line_start":535,"line_end":535,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181625,"byte_end":14181659,"line_start":536,"line_end":536,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181664,"byte_end":14181694,"line_start":537,"line_end":537,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181699,"byte_end":14181712,"line_start":538,"line_end":538,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181717,"byte_end":14181726,"line_start":539,"line_end":539,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181731,"byte_end":14181736,"line_start":540,"line_end":540,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181741,"byte_end":14181744,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181749,"byte_end":14181790,"line_start":542,"line_end":542,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181795,"byte_end":14181805,"line_start":543,"line_end":543,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(curr, Shared::null(), SeqCst, SeqCst, guard) {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181810,"byte_end":14181894,"line_start":544,"line_end":544,"column_start":5,"column_end":89}},{"value":"/         Ok(_) => break,","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181899,"byte_end":14181926,"line_start":545,"line_end":545,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181931,"byte_end":14181974,"line_start":546,"line_end":546,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181979,"byte_end":14181988,"line_start":547,"line_end":547,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14181993,"byte_end":14181998,"line_start":548,"line_end":548,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14182003,"byte_end":14182010,"line_start":549,"line_end":549,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14184540,"byte_end":14184552,"line_start":612,"line_end":612,"column_start":12,"column_end":24},"name":"fetch_update","qualname":"<Atomic<T>>::fetch_update","value":"fn fetch_update<'g, F>(&Self, Ordering, Ordering, &'g Guard, F)\n-> Result<Shared, Shared> where F: FnMut(Shared) -> Option<Shared>","parent":null,"children":[],"decl_id":null,"docs":" Fetches the pointer, and then applies a function to it that returns a new value.\n Returns a `Result` of `Ok(previous_value)` if the function returned `Some`, else `Err(_)`.","sig":null,"attributes":[{"value":"/ Fetches the pointer, and then applies a function to it that returns a new value.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14182710,"byte_end":14182794,"line_start":573,"line_end":573,"column_start":5,"column_end":89}},{"value":"/ Returns a `Result` of `Ok(previous_value)` if the function returned `Some`, else `Err(_)`.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14182799,"byte_end":14182893,"line_start":574,"line_end":574,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14182898,"byte_end":14182901,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ Note that the given function may be called multiple times if the value has been changed by","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14182906,"byte_end":14183000,"line_start":576,"line_end":576,"column_start":5,"column_end":99}},{"value":"/ other threads in the meantime, as long as the function returns `Some(_)`, but the function","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14183005,"byte_end":14183099,"line_start":577,"line_end":577,"column_start":5,"column_end":99}},{"value":"/ will have been applied only once to the stored value.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14183104,"byte_end":14183161,"line_start":578,"line_end":578,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14183166,"byte_end":14183169,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ `fetch_update` takes two [`Ordering`] arguments to describe the memory","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14183174,"byte_end":14183248,"line_start":580,"line_end":580,"column_start":5,"column_end":79}},{"value":"/ ordering of this operation. The first describes the required ordering for","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14183253,"byte_end":14183330,"line_start":581,"line_end":581,"column_start":5,"column_end":82}},{"value":"/ when the operation finally succeeds while the second describes the","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14183335,"byte_end":14183405,"line_start":582,"line_end":582,"column_start":5,"column_end":75}},{"value":"/ required ordering for loads. These correspond to the success and failure","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14183410,"byte_end":14183486,"line_start":583,"line_end":583,"column_start":5,"column_end":81}},{"value":"/ orderings of [`Atomic::compare_exchange`] respectively.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14183491,"byte_end":14183550,"line_start":584,"line_end":584,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14183555,"byte_end":14183558,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ Using [`Acquire`] as success ordering makes the store part of this","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14183563,"byte_end":14183633,"line_start":586,"line_end":586,"column_start":5,"column_end":75}},{"value":"/ operation [`Relaxed`], and using [`Release`] makes the final successful","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14183638,"byte_end":14183713,"line_start":587,"line_end":587,"column_start":5,"column_end":80}},{"value":"/ load [`Relaxed`]. The (failed) load ordering can only be [`SeqCst`],","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14183718,"byte_end":14183790,"line_start":588,"line_end":588,"column_start":5,"column_end":77}},{"value":"/ [`Acquire`] or [`Relaxed`] and must be equivalent to or weaker than the","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14183795,"byte_end":14183870,"line_start":589,"line_end":589,"column_start":5,"column_end":80}},{"value":"/ success ordering.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14183875,"byte_end":14183896,"line_start":590,"line_end":590,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14183901,"byte_end":14183904,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ [`Relaxed`]: Ordering::Relaxed","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14183909,"byte_end":14183943,"line_start":592,"line_end":592,"column_start":5,"column_end":39}},{"value":"/ [`Acquire`]: Ordering::Acquire","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14183948,"byte_end":14183982,"line_start":593,"line_end":593,"column_start":5,"column_end":39}},{"value":"/ [`Release`]: Ordering::Release","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14183987,"byte_end":14184021,"line_start":594,"line_end":594,"column_start":5,"column_end":39}},{"value":"/ [`SeqCst`]: Ordering::SeqCst","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14184026,"byte_end":14184058,"line_start":595,"line_end":595,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14184063,"byte_end":14184066,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14184071,"byte_end":14184085,"line_start":597,"line_end":597,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14184090,"byte_end":14184093,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14184098,"byte_end":14184105,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14184110,"byte_end":14184159,"line_start":600,"line_end":600,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14184164,"byte_end":14184208,"line_start":601,"line_end":601,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14184213,"byte_end":14184216,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14184221,"byte_end":14184251,"line_start":603,"line_end":603,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14184256,"byte_end":14184286,"line_start":604,"line_end":604,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14184291,"byte_end":14184294,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ let res1 = a.fetch_update(SeqCst, SeqCst, guard, |x| Some(x.with_tag(1)));","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14184299,"byte_end":14184377,"line_start":606,"line_end":606,"column_start":5,"column_end":83}},{"value":"/ assert!(res1.is_ok());","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14184382,"byte_end":14184408,"line_start":607,"line_end":607,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14184413,"byte_end":14184416,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ let res2 = a.fetch_update(SeqCst, SeqCst, guard, |x| None);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14184421,"byte_end":14184484,"line_start":609,"line_end":609,"column_start":5,"column_end":68}},{"value":"/ assert!(res2.is_err());","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14184489,"byte_end":14184516,"line_start":610,"line_end":610,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14184521,"byte_end":14184528,"line_start":611,"line_end":611,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14186852,"byte_end":14186867,"line_start":673,"line_end":673,"column_start":12,"column_end":27},"name":"compare_and_set","qualname":"<Atomic<T>>::compare_and_set","value":"fn compare_and_set<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14185150,"byte_end":14185246,"line_start":632,"line_end":632,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14185251,"byte_end":14185345,"line_start":633,"line_end":633,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14185350,"byte_end":14185421,"line_start":634,"line_end":634,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14185426,"byte_end":14185429,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14185434,"byte_end":14185529,"line_start":636,"line_end":636,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14185534,"byte_end":14185625,"line_start":637,"line_end":637,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14185630,"byte_end":14185643,"line_start":638,"line_end":638,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14185648,"byte_end":14185651,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14185656,"byte_end":14185741,"line_start":640,"line_end":640,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14185746,"byte_end":14185777,"line_start":641,"line_end":641,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14185782,"byte_end":14185785,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange`","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14185790,"byte_end":14185827,"line_start":643,"line_end":643,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14185832,"byte_end":14185835,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set` is equivalent to `compare_exchange` with the following mapping for","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14185840,"byte_end":14185928,"line_start":645,"line_end":645,"column_start":5,"column_end":93}},{"value":"/ memory orderings:","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14185933,"byte_end":14185954,"line_start":646,"line_end":646,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14185959,"byte_end":14185962,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14185967,"byte_end":14185999,"line_start":648,"line_end":648,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14186004,"byte_end":14186036,"line_start":649,"line_end":649,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14186041,"byte_end":14186073,"line_start":650,"line_end":650,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14186078,"byte_end":14186110,"line_start":651,"line_end":651,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14186115,"byte_end":14186147,"line_start":652,"line_end":652,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14186152,"byte_end":14186184,"line_start":653,"line_end":653,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14186189,"byte_end":14186220,"line_start":654,"line_end":654,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14186225,"byte_end":14186228,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14186233,"byte_end":14186247,"line_start":656,"line_end":656,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14186252,"byte_end":14186255,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14186260,"byte_end":14186267,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14186272,"byte_end":14186299,"line_start":659,"line_end":659,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14186304,"byte_end":14186368,"line_start":660,"line_end":660,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14186373,"byte_end":14186417,"line_start":661,"line_end":661,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14186422,"byte_end":14186425,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14186430,"byte_end":14186460,"line_start":663,"line_end":663,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14186465,"byte_end":14186468,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14186473,"byte_end":14186503,"line_start":665,"line_end":665,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14186508,"byte_end":14186545,"line_start":666,"line_end":666,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_and_set(curr, Shared::null(), SeqCst, guard);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14186550,"byte_end":14186620,"line_start":667,"line_end":667,"column_start":5,"column_end":75}},{"value":"/ let res2 = a.compare_and_set(curr, Owned::new(5678), SeqCst, guard);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14186625,"byte_end":14186697,"line_start":668,"line_end":668,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14186702,"byte_end":14186709,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14186761,"byte_end":14186781,"line_start":671,"line_end":671,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange` instead\")","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14186786,"byte_end":14186840,"line_start":672,"line_end":672,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14189636,"byte_end":14189656,"line_start":750,"line_end":750,"column_start":12,"column_end":32},"name":"compare_and_set_weak","qualname":"<Atomic<T>>::compare_and_set_weak","value":"fn compare_and_set_weak<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14187210,"byte_end":14187306,"line_start":687,"line_end":687,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14187311,"byte_end":14187405,"line_start":688,"line_end":688,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14187410,"byte_end":14187481,"line_start":689,"line_end":689,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14187486,"byte_end":14187489,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_and_set`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14187494,"byte_end":14187588,"line_start":691,"line_end":691,"column_start":5,"column_end":99}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14187593,"byte_end":14187688,"line_start":692,"line_end":692,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14187693,"byte_end":14187783,"line_start":693,"line_end":693,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14187788,"byte_end":14187872,"line_start":694,"line_end":694,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14187877,"byte_end":14187880,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14187885,"byte_end":14187970,"line_start":696,"line_end":696,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14187975,"byte_end":14188006,"line_start":697,"line_end":697,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14188011,"byte_end":14188014,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ [`compare_and_set`]: Atomic::compare_and_set","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14188019,"byte_end":14188067,"line_start":699,"line_end":699,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14188072,"byte_end":14188075,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange_weak`","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14188080,"byte_end":14188122,"line_start":701,"line_end":701,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14188127,"byte_end":14188130,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set_weak` is equivalent to `compare_exchange_weak` with the following mapping for","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14188135,"byte_end":14188233,"line_start":703,"line_end":703,"column_start":5,"column_end":103}},{"value":"/ memory orderings:","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14188238,"byte_end":14188259,"line_start":704,"line_end":704,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14188264,"byte_end":14188267,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14188272,"byte_end":14188304,"line_start":706,"line_end":706,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14188309,"byte_end":14188341,"line_start":707,"line_end":707,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14188346,"byte_end":14188378,"line_start":708,"line_end":708,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14188383,"byte_end":14188415,"line_start":709,"line_end":709,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14188420,"byte_end":14188452,"line_start":710,"line_end":710,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14188457,"byte_end":14188489,"line_start":711,"line_end":711,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14188494,"byte_end":14188525,"line_start":712,"line_end":712,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14188530,"byte_end":14188533,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14188538,"byte_end":14188552,"line_start":714,"line_end":714,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14188557,"byte_end":14188560,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14188565,"byte_end":14188572,"line_start":716,"line_end":716,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14188577,"byte_end":14188604,"line_start":717,"line_end":717,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14188609,"byte_end":14188673,"line_start":718,"line_end":718,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14188678,"byte_end":14188722,"line_start":719,"line_end":719,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14188727,"byte_end":14188730,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14188735,"byte_end":14188765,"line_start":721,"line_end":721,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14188770,"byte_end":14188800,"line_start":722,"line_end":722,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14188805,"byte_end":14188808,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14188813,"byte_end":14188848,"line_start":724,"line_end":724,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14188853,"byte_end":14188893,"line_start":725,"line_end":725,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14188898,"byte_end":14188908,"line_start":726,"line_end":726,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(ptr, new, SeqCst, guard) {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14188913,"byte_end":14188976,"line_start":727,"line_end":727,"column_start":5,"column_end":68}},{"value":"/         Ok(p) => {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14188981,"byte_end":14189003,"line_start":728,"line_end":728,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14189008,"byte_end":14189032,"line_start":729,"line_end":729,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14189037,"byte_end":14189059,"line_start":730,"line_end":730,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14189064,"byte_end":14189077,"line_start":731,"line_end":731,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14189082,"byte_end":14189107,"line_start":732,"line_end":732,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14189112,"byte_end":14189146,"line_start":733,"line_end":733,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14189151,"byte_end":14189181,"line_start":734,"line_end":734,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14189186,"byte_end":14189199,"line_start":735,"line_end":735,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14189204,"byte_end":14189213,"line_start":736,"line_end":736,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14189218,"byte_end":14189223,"line_start":737,"line_end":737,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14189228,"byte_end":14189231,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14189236,"byte_end":14189277,"line_start":739,"line_end":739,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14189282,"byte_end":14189292,"line_start":740,"line_end":740,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(curr, Shared::null(), SeqCst, guard) {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14189297,"byte_end":14189372,"line_start":741,"line_end":741,"column_start":5,"column_end":80}},{"value":"/         Ok(_) => break,","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14189377,"byte_end":14189404,"line_start":742,"line_end":742,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14189409,"byte_end":14189452,"line_start":743,"line_end":743,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14189457,"byte_end":14189466,"line_start":744,"line_end":744,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14189471,"byte_end":14189476,"line_start":745,"line_end":745,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14189481,"byte_end":14189488,"line_start":746,"line_end":746,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14189540,"byte_end":14189560,"line_start":748,"line_end":748,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange_weak` instead\")","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14189565,"byte_end":14189624,"line_start":749,"line_end":749,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14190735,"byte_end":14190744,"line_start":783,"line_end":783,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<Atomic<T>>::fetch_and","value":"fn fetch_and<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"and\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"and\" with the current tag.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14190004,"byte_end":14190043,"line_start":764,"line_end":764,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14190048,"byte_end":14190051,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"and\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14190056,"byte_end":14190150,"line_start":766,"line_end":766,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14190155,"byte_end":14190211,"line_start":767,"line_end":767,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14190216,"byte_end":14190219,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14190224,"byte_end":14190314,"line_start":769,"line_end":769,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14190319,"byte_end":14190333,"line_start":770,"line_end":770,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14190338,"byte_end":14190341,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14190346,"byte_end":14190360,"line_start":772,"line_end":772,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14190365,"byte_end":14190368,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14190373,"byte_end":14190380,"line_start":774,"line_end":774,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14190385,"byte_end":14190442,"line_start":775,"line_end":775,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14190447,"byte_end":14190491,"line_start":776,"line_end":776,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14190496,"byte_end":14190499,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(3));","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14190504,"byte_end":14190564,"line_start":778,"line_end":778,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14190569,"byte_end":14190599,"line_start":779,"line_end":779,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_and(2, SeqCst, guard).tag(), 3);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14190604,"byte_end":14190659,"line_start":780,"line_end":780,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14190664,"byte_end":14190711,"line_start":781,"line_end":781,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14190716,"byte_end":14190723,"line_start":782,"line_end":782,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14191643,"byte_end":14191651,"line_start":806,"line_end":806,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<Atomic<T>>::fetch_or","value":"fn fetch_or<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"or\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"or\" with the current tag.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14190915,"byte_end":14190953,"line_start":787,"line_end":787,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14190958,"byte_end":14190961,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"or\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14190966,"byte_end":14191059,"line_start":789,"line_end":789,"column_start":5,"column_end":98}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14191064,"byte_end":14191120,"line_start":790,"line_end":790,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14191125,"byte_end":14191128,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14191133,"byte_end":14191223,"line_start":792,"line_end":792,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14191228,"byte_end":14191242,"line_start":793,"line_end":793,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14191247,"byte_end":14191250,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14191255,"byte_end":14191269,"line_start":795,"line_end":795,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14191274,"byte_end":14191277,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14191282,"byte_end":14191289,"line_start":797,"line_end":797,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14191294,"byte_end":14191351,"line_start":798,"line_end":798,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14191356,"byte_end":14191400,"line_start":799,"line_end":799,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14191405,"byte_end":14191408,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14191413,"byte_end":14191473,"line_start":801,"line_end":801,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14191478,"byte_end":14191508,"line_start":802,"line_end":802,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_or(2, SeqCst, guard).tag(), 1);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14191513,"byte_end":14191567,"line_start":803,"line_end":803,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 3);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14191572,"byte_end":14191619,"line_start":804,"line_end":804,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14191624,"byte_end":14191631,"line_start":805,"line_end":805,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14192551,"byte_end":14192560,"line_start":829,"line_end":829,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<Atomic<T>>::fetch_xor","value":"fn fetch_xor<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"xor\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"xor\" with the current tag.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14191820,"byte_end":14191859,"line_start":810,"line_end":810,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14191864,"byte_end":14191867,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"xor\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14191872,"byte_end":14191966,"line_start":812,"line_end":812,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14191971,"byte_end":14192027,"line_start":813,"line_end":813,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14192032,"byte_end":14192035,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14192040,"byte_end":14192130,"line_start":815,"line_end":815,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14192135,"byte_end":14192149,"line_start":816,"line_end":816,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14192154,"byte_end":14192157,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14192162,"byte_end":14192176,"line_start":818,"line_end":818,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14192181,"byte_end":14192184,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14192189,"byte_end":14192196,"line_start":820,"line_end":820,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14192201,"byte_end":14192258,"line_start":821,"line_end":821,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14192263,"byte_end":14192307,"line_start":822,"line_end":822,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14192312,"byte_end":14192315,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14192320,"byte_end":14192380,"line_start":824,"line_end":824,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14192385,"byte_end":14192415,"line_start":825,"line_end":825,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_xor(3, SeqCst, guard).tag(), 1);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14192420,"byte_end":14192475,"line_start":826,"line_end":826,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14192480,"byte_end":14192527,"line_start":827,"line_end":827,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14192532,"byte_end":14192539,"line_start":828,"line_end":828,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14193857,"byte_end":14193867,"line_start":867,"line_end":867,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Atomic<T>>::into_owned","value":"unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14192730,"byte_end":14192765,"line_start":833,"line_end":833,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14192770,"byte_end":14192773,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14192778,"byte_end":14192867,"line_start":835,"line_end":835,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14192872,"byte_end":14192958,"line_start":836,"line_end":836,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14192963,"byte_end":14192998,"line_start":837,"line_end":837,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14193003,"byte_end":14193006,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14193011,"byte_end":14193023,"line_start":839,"line_end":839,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14193028,"byte_end":14193031,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14193036,"byte_end":14193095,"line_start":841,"line_end":841,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14193100,"byte_end":14193103,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14193108,"byte_end":14193120,"line_start":843,"line_end":843,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14193125,"byte_end":14193128,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14193133,"byte_end":14193220,"line_start":845,"line_end":845,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14193225,"byte_end":14193258,"line_start":846,"line_end":846,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14193263,"byte_end":14193266,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14193271,"byte_end":14193285,"line_start":848,"line_end":848,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14193290,"byte_end":14193293,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14193298,"byte_end":14193309,"line_start":850,"line_end":850,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14193314,"byte_end":14193333,"line_start":851,"line_end":851,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14193338,"byte_end":14193372,"line_start":852,"line_end":852,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14193377,"byte_end":14193403,"line_start":853,"line_end":853,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14193408,"byte_end":14193435,"line_start":854,"line_end":854,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14193440,"byte_end":14193445,"line_start":855,"line_end":855,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14193450,"byte_end":14193453,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14193458,"byte_end":14193491,"line_start":857,"line_end":857,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14193496,"byte_end":14193524,"line_start":858,"line_end":858,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14193529,"byte_end":14193623,"line_start":859,"line_end":859,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14193628,"byte_end":14193675,"line_start":860,"line_end":860,"column_start":5,"column_end":52}},{"value":"/         unsafe {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14193680,"byte_end":14193700,"line_start":861,"line_end":861,"column_start":5,"column_end":25}},{"value":"/             drop(mem::replace(&mut self.ptr, Atomic::null()).into_owned());","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14193705,"byte_end":14193784,"line_start":862,"line_end":862,"column_start":5,"column_end":84}},{"value":"/         }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14193789,"byte_end":14193802,"line_start":863,"line_end":863,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14193807,"byte_end":14193816,"line_start":864,"line_end":864,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14193821,"byte_end":14193826,"line_start":865,"line_end":865,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14193831,"byte_end":14193838,"line_start":866,"line_end":866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14194395,"byte_end":14194398,"line_start":883,"line_end":883,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Atomic<T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14194748,"byte_end":14194751,"line_start":895,"line_end":895,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Atomic<T> as std::fmt::Pointer>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10125},"children":[],"decl_id":{"krate":2,"index":10126},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14195217,"byte_end":14195222,"line_start":907,"line_end":907,"column_start":8,"column_end":13},"name":"clone","qualname":"<Atomic<T> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":" Returns a copy of the atomic value.","sig":null,"attributes":[{"value":"/ Returns a copy of the atomic value.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14195039,"byte_end":14195078,"line_start":903,"line_end":903,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14195083,"byte_end":14195086,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ Note that a `Relaxed` load is used here. If you need synchronization, use it with other","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14195091,"byte_end":14195182,"line_start":905,"line_end":905,"column_start":5,"column_end":96}},{"value":"/ atomics or fences.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14195187,"byte_end":14195209,"line_start":906,"line_end":906,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14195395,"byte_end":14195402,"line_start":914,"line_end":914,"column_start":8,"column_end":15},"name":"default","qualname":"<Atomic<T> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14195739,"byte_end":14195743,"line_start":929,"line_end":929,"column_start":8,"column_end":12},"name":"from","qualname":"<Atomic<T> as std::convert::From>::from","value":"fn from(Owned<T>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":" Returns a new atomic pointer pointing to `owned`.","sig":null,"attributes":[{"value":"/ Returns a new atomic pointer pointing to `owned`.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14195510,"byte_end":14195563,"line_start":920,"line_end":920,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14195568,"byte_end":14195571,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14195576,"byte_end":14195590,"line_start":922,"line_end":922,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14195595,"byte_end":14195598,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14195603,"byte_end":14195610,"line_start":924,"line_end":924,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Owned};","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14195615,"byte_end":14195656,"line_start":925,"line_end":925,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14195661,"byte_end":14195664,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Owned::new(1234));","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14195669,"byte_end":14195719,"line_start":927,"line_end":927,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14195724,"byte_end":14195731,"line_start":928,"line_end":928,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14195914,"byte_end":14195918,"line_start":937,"line_end":937,"column_start":8,"column_end":12},"name":"from","qualname":"<Atomic<T> as std::convert::From>::from","value":"fn from(Box<T>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14196023,"byte_end":14196027,"line_start":943,"line_end":943,"column_start":8,"column_end":12},"name":"from","qualname":"<Atomic<T> as std::convert::From>::from","value":"fn from(T) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14196379,"byte_end":14196383,"line_start":958,"line_end":958,"column_start":8,"column_end":12},"name":"from","qualname":"<Atomic<T> as std::convert::From>::from","value":"fn from(Shared) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":" Returns a new atomic pointer pointing to `ptr`.","sig":null,"attributes":[{"value":"/ Returns a new atomic pointer pointing to `ptr`.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14196146,"byte_end":14196197,"line_start":949,"line_end":949,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14196202,"byte_end":14196205,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14196210,"byte_end":14196224,"line_start":951,"line_end":951,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14196229,"byte_end":14196232,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14196237,"byte_end":14196244,"line_start":953,"line_end":953,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Shared};","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14196249,"byte_end":14196291,"line_start":954,"line_end":954,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14196296,"byte_end":14196299,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::<i32>::null());","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14196304,"byte_end":14196359,"line_start":956,"line_end":956,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14196364,"byte_end":14196371,"line_start":957,"line_end":957,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14196743,"byte_end":14196747,"line_start":974,"line_end":974,"column_start":8,"column_end":12},"name":"from","qualname":"<Atomic<T> as std::convert::From>::from","value":"fn from(*const T) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":" Returns a new atomic pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new atomic pointer pointing to `raw`.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14196501,"byte_end":14196552,"line_start":964,"line_end":964,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14196557,"byte_end":14196560,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14196565,"byte_end":14196579,"line_start":966,"line_end":966,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14196584,"byte_end":14196587,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14196592,"byte_end":14196599,"line_start":968,"line_end":968,"column_start":5,"column_end":12}},{"value":"/ use std::ptr;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14196604,"byte_end":14196621,"line_start":969,"line_end":969,"column_start":5,"column_end":22}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14196626,"byte_end":14196658,"line_start":970,"line_end":970,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14196663,"byte_end":14196666,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(ptr::null::<i32>());","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14196671,"byte_end":14196723,"line_start":972,"line_end":972,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14196728,"byte_end":14196735,"line_start":973,"line_end":973,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":242},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14196884,"byte_end":14196891,"line_start":980,"line_end":980,"column_start":11,"column_end":18},"name":"Pointer","qualname":"::atomic::Pointer","value":"Pointer<T>","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245}],"decl_id":null,"docs":" A trait for either `Owned` or `Shared` pointers.\n","sig":null,"attributes":[{"value":"/ A trait for either `Owned` or `Shared` pointers.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14196821,"byte_end":14196873,"line_start":979,"line_end":979,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14196983,"byte_end":14196993,"line_start":982,"line_end":982,"column_start":8,"column_end":18},"name":"into_usize","qualname":"::atomic::Pointer::into_usize","value":"fn into_usize(Self) -> usize","parent":{"krate":0,"index":242},"children":[],"decl_id":null,"docs":" Returns the machine representation of the pointer.\n","sig":null,"attributes":[{"value":"/ Returns the machine representation of the pointer.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14196921,"byte_end":14196975,"line_start":981,"line_end":981,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14197300,"byte_end":14197310,"line_start":990,"line_end":990,"column_start":15,"column_end":25},"name":"from_usize","qualname":"::atomic::Pointer::from_usize","value":"unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":242},"children":[],"decl_id":null,"docs":" Returns a new pointer pointing to the tagged pointer `data`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14197015,"byte_end":14197079,"line_start":984,"line_end":984,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14197084,"byte_end":14197087,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14197092,"byte_end":14197104,"line_start":986,"line_end":986,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14197109,"byte_end":14197112,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ The given `data` should have been created by `Pointer::into_usize()`, and one `data` should","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14197117,"byte_end":14197212,"line_start":988,"line_end":988,"column_start":5,"column_end":100}},{"value":"/ not be converted back by `Pointer::from_usize()` multiple times.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14197217,"byte_end":14197285,"line_start":989,"line_end":989,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":246},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14197576,"byte_end":14197581,"line_start":999,"line_end":999,"column_start":12,"column_end":17},"name":"Owned","qualname":"::atomic::Owned","value":"Owned {  }","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249}],"decl_id":null,"docs":" An owned heap-allocated object.","sig":null,"attributes":[{"value":"/ An owned heap-allocated object.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14197336,"byte_end":14197371,"line_start":993,"line_end":993,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14197372,"byte_end":14197375,"line_start":994,"line_end":994,"column_start":1,"column_end":4}},{"value":"/ This type is very similar to `Box<T>`.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14197376,"byte_end":14197418,"line_start":995,"line_end":995,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14197419,"byte_end":14197422,"line_start":996,"line_end":996,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14197423,"byte_end":14197521,"line_start":997,"line_end":997,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14197522,"byte_end":14197564,"line_start":998,"line_end":998,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14197736,"byte_end":14197746,"line_start":1006,"line_end":1006,"column_start":8,"column_end":18},"name":"into_usize","qualname":"<Owned<T> as atomic::Pointer>::into_usize","value":"fn into_usize(Self) -> usize","parent":{"krate":0,"index":242},"children":[],"decl_id":{"krate":0,"index":244},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14197719,"byte_end":14197728,"line_start":1005,"line_end":1005,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14198021,"byte_end":14198031,"line_start":1018,"line_end":1018,"column_start":15,"column_end":25},"name":"from_usize","qualname":"<Owned<T> as atomic::Pointer>::from_usize","value":"unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":242},"children":[],"decl_id":{"krate":0,"index":245},"docs":" Returns a new pointer pointing to the tagged pointer `data`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14197845,"byte_end":14197909,"line_start":1012,"line_end":1012,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14197914,"byte_end":14197917,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14197922,"byte_end":14197934,"line_start":1014,"line_end":1014,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14197939,"byte_end":14197942,"line_start":1015,"line_end":1015,"column_start":5,"column_end":8}},{"value":"/ Panics if the data is zero in debug mode.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14197947,"byte_end":14197992,"line_start":1016,"line_end":1016,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14197997,"byte_end":14198006,"line_start":1017,"line_end":1017,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14198979,"byte_end":14198987,"line_start":1050,"line_end":1050,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Owned<T>>::from_raw","value":"unsafe fn from_raw(*mut T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new owned pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `raw`.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14198231,"byte_end":14198281,"line_start":1028,"line_end":1028,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14198286,"byte_end":14198289,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may lead to memory problems. Argument `raw`","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14198294,"byte_end":14198386,"line_start":1030,"line_end":1030,"column_start":5,"column_end":97}},{"value":"/ must be a valid pointer. Also, a double-free may occur if the function is called twice on","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14198391,"byte_end":14198484,"line_start":1031,"line_end":1031,"column_start":5,"column_end":98}},{"value":"/ the same raw pointer.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14198489,"byte_end":14198514,"line_start":1032,"line_end":1032,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14198519,"byte_end":14198522,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14198527,"byte_end":14198539,"line_start":1034,"line_end":1034,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14198544,"byte_end":14198547,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14198552,"byte_end":14198596,"line_start":1036,"line_end":1036,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14198601,"byte_end":14198604,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14198609,"byte_end":14198621,"line_start":1038,"line_end":1038,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14198626,"byte_end":14198629,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ The given `raw` should have been derived from `Owned`, and one `raw` should not be converted","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14198634,"byte_end":14198730,"line_start":1040,"line_end":1040,"column_start":5,"column_end":101}},{"value":"/ back by `Owned::from_raw()` multiple times.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14198735,"byte_end":14198782,"line_start":1041,"line_end":1041,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14198787,"byte_end":14198790,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14198795,"byte_end":14198809,"line_start":1043,"line_end":1043,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14198814,"byte_end":14198817,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14198822,"byte_end":14198829,"line_start":1045,"line_end":1045,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14198834,"byte_end":14198865,"line_start":1046,"line_end":1046,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14198870,"byte_end":14198873,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14198878,"byte_end":14198948,"line_start":1048,"line_end":1048,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14198953,"byte_end":14198960,"line_start":1049,"line_end":1049,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14199385,"byte_end":14199393,"line_start":1067,"line_end":1067,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Owned<T>>::into_box","value":"fn into_box(Self) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a `Box`.","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a `Box`.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14199122,"byte_end":14199166,"line_start":1056,"line_end":1056,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14199171,"byte_end":14199174,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14199179,"byte_end":14199193,"line_start":1058,"line_end":1058,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14199198,"byte_end":14199201,"line_start":1059,"line_end":1059,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14199206,"byte_end":14199213,"line_start":1060,"line_end":1060,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14199218,"byte_end":14199249,"line_start":1061,"line_end":1061,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14199254,"byte_end":14199257,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14199262,"byte_end":14199291,"line_start":1063,"line_end":1063,"column_start":5,"column_end":34}},{"value":"/ let b: Box<i32> = o.into_box();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14199296,"byte_end":14199331,"line_start":1064,"line_end":1064,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*b, 1234);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14199336,"byte_end":14199361,"line_start":1065,"line_end":1065,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14199366,"byte_end":14199373,"line_start":1066,"line_end":1066,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14199782,"byte_end":14199785,"line_start":1082,"line_end":1082,"column_start":12,"column_end":15},"name":"new","qualname":"<Owned<T>>::new","value":"fn new(T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14199552,"byte_end":14199633,"line_start":1073,"line_end":1073,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14199638,"byte_end":14199641,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14199646,"byte_end":14199660,"line_start":1075,"line_end":1075,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14199665,"byte_end":14199668,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14199673,"byte_end":14199680,"line_start":1077,"line_end":1077,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14199685,"byte_end":14199716,"line_start":1078,"line_end":1078,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14199721,"byte_end":14199724,"line_start":1079,"line_end":1079,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14199729,"byte_end":14199758,"line_start":1080,"line_end":1080,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14199763,"byte_end":14199770,"line_start":1081,"line_end":1081,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14200124,"byte_end":14200128,"line_start":1097,"line_end":1097,"column_start":12,"column_end":16},"name":"init","qualname":"<Owned<T>>::init","value":"fn init(T::Init) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14199886,"byte_end":14199967,"line_start":1088,"line_end":1088,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14199972,"byte_end":14199975,"line_start":1089,"line_end":1089,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14199980,"byte_end":14199994,"line_start":1090,"line_end":1090,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14199999,"byte_end":14200002,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14200007,"byte_end":14200014,"line_start":1092,"line_end":1092,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14200019,"byte_end":14200050,"line_start":1093,"line_end":1093,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14200055,"byte_end":14200058,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::<i32>::init(1234);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14200063,"byte_end":14200100,"line_start":1095,"line_end":1095,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14200105,"byte_end":14200112,"line_start":1096,"line_end":1096,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14200549,"byte_end":14200560,"line_start":1113,"line_end":1113,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<Owned<T>>::into_shared","value":"fn into_shared<'g>(Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a [`Shared`].","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a [`Shared`].","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14200220,"byte_end":14200269,"line_start":1101,"line_end":1101,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14200274,"byte_end":14200277,"line_start":1102,"line_end":1102,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14200282,"byte_end":14200296,"line_start":1103,"line_end":1103,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14200301,"byte_end":14200304,"line_start":1104,"line_end":1104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14200309,"byte_end":14200316,"line_start":1105,"line_end":1105,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14200321,"byte_end":14200369,"line_start":1106,"line_end":1106,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14200374,"byte_end":14200377,"line_start":1107,"line_end":1107,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14200382,"byte_end":14200411,"line_start":1108,"line_end":1108,"column_start":5,"column_end":34}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14200416,"byte_end":14200446,"line_start":1109,"line_end":1109,"column_start":5,"column_end":35}},{"value":"/ let p = o.into_shared(guard);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14200451,"byte_end":14200484,"line_start":1110,"line_end":1110,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14200489,"byte_end":14200496,"line_start":1111,"line_end":1111,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14200501,"byte_end":14200537,"line_start":1112,"line_end":1112,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14200880,"byte_end":14200883,"line_start":1126,"line_end":1126,"column_start":12,"column_end":15},"name":"tag","qualname":"<Owned<T>>::tag","value":"fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14200672,"byte_end":14200718,"line_start":1117,"line_end":1117,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14200723,"byte_end":14200726,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14200731,"byte_end":14200745,"line_start":1119,"line_end":1119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14200750,"byte_end":14200753,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14200758,"byte_end":14200765,"line_start":1121,"line_end":1121,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14200770,"byte_end":14200801,"line_start":1122,"line_end":1122,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14200806,"byte_end":14200809,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Owned::new(1234).tag(), 0);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14200814,"byte_end":14200856,"line_start":1124,"line_end":1124,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14200861,"byte_end":14200868,"line_start":1125,"line_end":1125,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14201356,"byte_end":14201364,"line_start":1144,"line_end":1144,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Owned<T>>::with_tag","value":"fn with_tag(Self, usize) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14200979,"byte_end":14201069,"line_start":1131,"line_end":1131,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14201074,"byte_end":14201112,"line_start":1132,"line_end":1132,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14201117,"byte_end":14201120,"line_start":1133,"line_end":1133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14201125,"byte_end":14201139,"line_start":1134,"line_end":1134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14201144,"byte_end":14201147,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14201152,"byte_end":14201159,"line_start":1136,"line_end":1136,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14201164,"byte_end":14201195,"line_start":1137,"line_end":1137,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14201200,"byte_end":14201203,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(0u64);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14201208,"byte_end":14201237,"line_start":1139,"line_end":1139,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(o.tag(), 0);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14201242,"byte_end":14201269,"line_start":1140,"line_end":1140,"column_start":5,"column_end":32}},{"value":"/ let o = o.with_tag(2);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14201274,"byte_end":14201300,"line_start":1141,"line_end":1141,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(o.tag(), 2);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14201305,"byte_end":14201332,"line_start":1142,"line_end":1142,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14201337,"byte_end":14201344,"line_start":1143,"line_end":1143,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14201564,"byte_end":14201568,"line_start":1151,"line_end":1151,"column_start":8,"column_end":12},"name":"drop","qualname":"<Owned<T> as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3422},"children":[],"decl_id":{"krate":2,"index":3423},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14201759,"byte_end":14201762,"line_start":1160,"line_end":1160,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Owned<T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14202042,"byte_end":14202047,"line_start":1171,"line_end":1171,"column_start":8,"column_end":13},"name":"clone","qualname":"<Owned<T> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14202210,"byte_end":14202215,"line_start":1179,"line_end":1179,"column_start":8,"column_end":13},"name":"deref","qualname":"<Owned<T> as std::ops::Deref>::deref","value":"fn deref(&Self) -> &T","parent":{"krate":2,"index":3398},"children":[],"decl_id":{"krate":2,"index":3400},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14202386,"byte_end":14202395,"line_start":1186,"line_end":1186,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<Owned<T> as std::ops::DerefMut>::deref_mut","value":"fn deref_mut(&mut Self) -> &mut T","parent":{"krate":2,"index":3411},"children":[],"decl_id":{"krate":2,"index":3412},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14202557,"byte_end":14202561,"line_start":1193,"line_end":1193,"column_start":8,"column_end":12},"name":"from","qualname":"<Owned<T> as std::convert::From>::from","value":"fn from(T) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14202983,"byte_end":14202987,"line_start":1212,"line_end":1212,"column_start":8,"column_end":12},"name":"from","qualname":"<Owned<T> as std::convert::From>::from","value":"fn from(Box<T>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":" Returns a new owned pointer pointing to `b`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `b`.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14202649,"byte_end":14202697,"line_start":1199,"line_end":1199,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14202702,"byte_end":14202705,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14202710,"byte_end":14202722,"line_start":1201,"line_end":1201,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14202727,"byte_end":14202730,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ Panics if the pointer (the `Box`) is not properly aligned.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14202735,"byte_end":14202797,"line_start":1203,"line_end":1203,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14202802,"byte_end":14202805,"line_start":1204,"line_end":1204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14202810,"byte_end":14202824,"line_start":1205,"line_end":1205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14202829,"byte_end":14202832,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14202837,"byte_end":14202844,"line_start":1207,"line_end":1207,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14202849,"byte_end":14202880,"line_start":1208,"line_end":1208,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14202885,"byte_end":14202888,"line_start":1209,"line_end":1209,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14202893,"byte_end":14202963,"line_start":1210,"line_end":1210,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14202968,"byte_end":14202975,"line_start":1211,"line_end":1211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14203130,"byte_end":14203136,"line_start":1218,"line_end":1218,"column_start":8,"column_end":14},"name":"borrow","qualname":"<Owned<T> as std::borrow::Borrow>::borrow","value":"fn borrow(&Self) -> &T","parent":{"krate":2,"index":2776},"children":[],"decl_id":{"krate":2,"index":2778},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14203245,"byte_end":14203255,"line_start":1224,"line_end":1224,"column_start":8,"column_end":18},"name":"borrow_mut","qualname":"<Owned<T> as std::borrow::BorrowMut>::borrow_mut","value":"fn borrow_mut(&mut Self) -> &mut T","parent":{"krate":2,"index":2779},"children":[],"decl_id":{"krate":2,"index":2781},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14203372,"byte_end":14203378,"line_start":1230,"line_end":1230,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Owned<T> as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &T","parent":{"krate":2,"index":3076},"children":[],"decl_id":{"krate":2,"index":3078},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14203483,"byte_end":14203489,"line_start":1236,"line_end":1236,"column_start":8,"column_end":14},"name":"as_mut","qualname":"<Owned<T> as std::convert::AsMut>::as_mut","value":"fn as_mut(&mut Self) -> &mut T","parent":{"krate":2,"index":3079},"children":[],"decl_id":{"krate":2,"index":3081},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":300},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14203826,"byte_end":14203832,"line_start":1247,"line_end":1247,"column_start":12,"column_end":18},"name":"Shared","qualname":"::atomic::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"decl_id":null,"docs":" A pointer to an object protected by the epoch GC.","sig":null,"attributes":[{"value":"/ A pointer to an object protected by the epoch GC.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14203547,"byte_end":14203600,"line_start":1241,"line_end":1241,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14203601,"byte_end":14203604,"line_start":1242,"line_end":1242,"column_start":1,"column_end":4}},{"value":"/ The pointer is valid for use only during the lifetime `'g`.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14203605,"byte_end":14203668,"line_start":1243,"line_end":1243,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14203669,"byte_end":14203672,"line_start":1244,"line_end":1244,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14203673,"byte_end":14203771,"line_start":1245,"line_end":1245,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14203772,"byte_end":14203814,"line_start":1246,"line_end":1246,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14203994,"byte_end":14203999,"line_start":1253,"line_end":1253,"column_start":8,"column_end":13},"name":"clone","qualname":"<Shared as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14204249,"byte_end":14204259,"line_start":1265,"line_end":1265,"column_start":8,"column_end":18},"name":"into_usize","qualname":"<Shared as atomic::Pointer>::into_usize","value":"fn into_usize(Self) -> usize","parent":{"krate":0,"index":242},"children":[],"decl_id":{"krate":0,"index":244},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14204232,"byte_end":14204241,"line_start":1264,"line_end":1264,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14204330,"byte_end":14204340,"line_start":1270,"line_end":1270,"column_start":15,"column_end":25},"name":"from_usize","qualname":"<Shared as atomic::Pointer>::from_usize","value":"unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":242},"children":[],"decl_id":{"krate":0,"index":245},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14204306,"byte_end":14204315,"line_start":1269,"line_end":1269,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14204954,"byte_end":14204960,"line_start":1295,"line_end":1295,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Shared>::as_raw","value":"fn as_raw(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a raw pointer (without the tag).","sig":null,"attributes":[{"value":"/ Converts the pointer to a raw pointer (without the tag).","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14204484,"byte_end":14204544,"line_start":1279,"line_end":1279,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14204549,"byte_end":14204552,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14204557,"byte_end":14204571,"line_start":1281,"line_end":1281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14204576,"byte_end":14204579,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14204584,"byte_end":14204591,"line_start":1283,"line_end":1283,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14204596,"byte_end":14204652,"line_start":1284,"line_end":1284,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14204657,"byte_end":14204701,"line_start":1285,"line_end":1285,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14204706,"byte_end":14204709,"line_start":1286,"line_end":1286,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14204714,"byte_end":14204743,"line_start":1287,"line_end":1287,"column_start":5,"column_end":34}},{"value":"/ let raw = &*o as *const _;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14204748,"byte_end":14204778,"line_start":1288,"line_end":1288,"column_start":5,"column_end":35}},{"value":"/ let a = Atomic::from(o);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14204783,"byte_end":14204811,"line_start":1289,"line_end":1289,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14204816,"byte_end":14204819,"line_start":1290,"line_end":1290,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14204824,"byte_end":14204854,"line_start":1291,"line_end":1291,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14204859,"byte_end":14204893,"line_start":1292,"line_end":1292,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.as_raw(), raw);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14204898,"byte_end":14204930,"line_start":1293,"line_end":1293,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14204935,"byte_end":14204942,"line_start":1294,"line_end":1294,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14205337,"byte_end":14205341,"line_start":1312,"line_end":1312,"column_start":12,"column_end":16},"name":"null","qualname":"<Shared>::null","value":"fn null() -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null pointer.","sig":null,"attributes":[{"value":"/ Returns a new null pointer.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14205121,"byte_end":14205152,"line_start":1302,"line_end":1302,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14205157,"byte_end":14205160,"line_start":1303,"line_end":1303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14205165,"byte_end":14205179,"line_start":1304,"line_end":1304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14205184,"byte_end":14205187,"line_start":1305,"line_end":1305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14205192,"byte_end":14205199,"line_start":1306,"line_end":1306,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14205204,"byte_end":14205236,"line_start":1307,"line_end":1307,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14205241,"byte_end":14205244,"line_start":1308,"line_end":1308,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::<i32>::null();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14205249,"byte_end":14205283,"line_start":1309,"line_end":1309,"column_start":5,"column_end":39}},{"value":"/ assert!(p.is_null());","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14205288,"byte_end":14205313,"line_start":1310,"line_end":1310,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14205318,"byte_end":14205325,"line_start":1311,"line_end":1311,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14205898,"byte_end":14205905,"line_start":1333,"line_end":1333,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Shared>::is_null","value":"fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pointer is null.","sig":null,"attributes":[{"value":"/ Returns `true` if the pointer is null.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14205456,"byte_end":14205498,"line_start":1319,"line_end":1319,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14205503,"byte_end":14205506,"line_start":1320,"line_end":1320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14205511,"byte_end":14205525,"line_start":1321,"line_end":1321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14205530,"byte_end":14205533,"line_start":1322,"line_end":1322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14205538,"byte_end":14205545,"line_start":1323,"line_end":1323,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14205550,"byte_end":14205606,"line_start":1324,"line_end":1324,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14205611,"byte_end":14205655,"line_start":1325,"line_end":1325,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14205660,"byte_end":14205663,"line_start":1326,"line_end":1326,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::null();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14205668,"byte_end":14205695,"line_start":1327,"line_end":1327,"column_start":5,"column_end":32}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14205700,"byte_end":14205730,"line_start":1328,"line_end":1328,"column_start":5,"column_end":35}},{"value":"/ assert!(a.load(SeqCst, guard).is_null());","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14205735,"byte_end":14205780,"line_start":1329,"line_end":1329,"column_start":5,"column_end":50}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14205785,"byte_end":14205823,"line_start":1330,"line_end":1330,"column_start":5,"column_end":43}},{"value":"/ assert!(!a.load(SeqCst, guard).is_null());","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14205828,"byte_end":14205874,"line_start":1331,"line_end":1331,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14205879,"byte_end":14205886,"line_start":1332,"line_end":1332,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14207185,"byte_end":14207190,"line_start":1369,"line_end":1369,"column_start":19,"column_end":24},"name":"deref","qualname":"<Shared>::deref","value":"unsafe fn deref(&Self) -> &'g T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14206005,"byte_end":14206034,"line_start":1338,"line_end":1338,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14206039,"byte_end":14206042,"line_start":1339,"line_end":1339,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14206047,"byte_end":14206125,"line_start":1340,"line_end":1340,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14206130,"byte_end":14206133,"line_start":1341,"line_end":1341,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14206138,"byte_end":14206150,"line_start":1342,"line_end":1342,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14206155,"byte_end":14206158,"line_start":1343,"line_end":1343,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14206163,"byte_end":14206248,"line_start":1344,"line_end":1344,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14206253,"byte_end":14206256,"line_start":1345,"line_end":1345,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14206261,"byte_end":14206352,"line_start":1346,"line_end":1346,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14206357,"byte_end":14206406,"line_start":1347,"line_end":1347,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14206411,"byte_end":14206414,"line_start":1348,"line_end":1348,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14206419,"byte_end":14206491,"line_start":1349,"line_end":1349,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14206496,"byte_end":14206571,"line_start":1350,"line_end":1350,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14206576,"byte_end":14206579,"line_start":1351,"line_end":1351,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14206584,"byte_end":14206677,"line_start":1352,"line_end":1352,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14206682,"byte_end":14206775,"line_start":1353,"line_end":1353,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14206780,"byte_end":14206818,"line_start":1354,"line_end":1354,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14206823,"byte_end":14206826,"line_start":1355,"line_end":1355,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14206831,"byte_end":14206845,"line_start":1356,"line_end":1356,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14206850,"byte_end":14206853,"line_start":1357,"line_end":1357,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14206858,"byte_end":14206865,"line_start":1358,"line_end":1358,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14206870,"byte_end":14206919,"line_start":1359,"line_end":1359,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14206924,"byte_end":14206968,"line_start":1360,"line_end":1360,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14206973,"byte_end":14206976,"line_start":1361,"line_end":1361,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14206981,"byte_end":14207011,"line_start":1362,"line_end":1362,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14207016,"byte_end":14207046,"line_start":1363,"line_end":1363,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14207051,"byte_end":14207085,"line_start":1364,"line_end":1364,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14207090,"byte_end":14207102,"line_start":1365,"line_end":1365,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &1234);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14207107,"byte_end":14207144,"line_start":1366,"line_end":1366,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14207149,"byte_end":14207154,"line_start":1367,"line_end":1367,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14207159,"byte_end":14207166,"line_start":1368,"line_end":1368,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14208456,"byte_end":14208465,"line_start":1410,"line_end":1410,"column_start":19,"column_end":28},"name":"deref_mut","qualname":"<Shared>::deref_mut","value":"unsafe fn deref_mut(&mut Self) -> &'g mut T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14207296,"byte_end":14207325,"line_start":1374,"line_end":1374,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14207330,"byte_end":14207333,"line_start":1375,"line_end":1375,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14207338,"byte_end":14207424,"line_start":1376,"line_end":1376,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14207429,"byte_end":14207432,"line_start":1377,"line_end":1377,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14207437,"byte_end":14207449,"line_start":1378,"line_end":1378,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14207454,"byte_end":14207457,"line_start":1379,"line_end":1379,"column_start":5,"column_end":8}},{"value":"/ * There is no guarantee that there are no more threads attempting to read/write from/to the","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14207462,"byte_end":14207557,"line_start":1380,"line_end":1380,"column_start":5,"column_end":100}},{"value":"/   actual object at the same time.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14207562,"byte_end":14207599,"line_start":1381,"line_end":1381,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14207604,"byte_end":14207607,"line_start":1382,"line_end":1382,"column_start":5,"column_end":8}},{"value":"/   The user must know that there are no concurrent accesses towards the object itself.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14207612,"byte_end":14207701,"line_start":1383,"line_end":1383,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14207706,"byte_end":14207709,"line_start":1384,"line_end":1384,"column_start":5,"column_end":8}},{"value":"/ * Other than the above, all safety concerns of `deref()` applies here.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14207714,"byte_end":14207788,"line_start":1385,"line_end":1385,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14207793,"byte_end":14207796,"line_start":1386,"line_end":1386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14207801,"byte_end":14207815,"line_start":1387,"line_end":1387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14207820,"byte_end":14207823,"line_start":1388,"line_end":1388,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14207828,"byte_end":14207835,"line_start":1389,"line_end":1389,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14207840,"byte_end":14207889,"line_start":1390,"line_end":1390,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14207894,"byte_end":14207938,"line_start":1391,"line_end":1391,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14207943,"byte_end":14207946,"line_start":1392,"line_end":1392,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(vec![1, 2, 3, 4]);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14207951,"byte_end":14207993,"line_start":1393,"line_end":1393,"column_start":5,"column_end":47}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14207998,"byte_end":14208028,"line_start":1394,"line_end":1394,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14208033,"byte_end":14208036,"line_start":1395,"line_end":1395,"column_start":5,"column_end":8}},{"value":"/ let mut p = a.load(SeqCst, guard);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14208041,"byte_end":14208079,"line_start":1396,"line_end":1396,"column_start":5,"column_end":43}},{"value":"/ unsafe {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14208084,"byte_end":14208096,"line_start":1397,"line_end":1397,"column_start":5,"column_end":17}},{"value":"/     assert!(!p.is_null());","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14208101,"byte_end":14208131,"line_start":1398,"line_end":1398,"column_start":5,"column_end":35}},{"value":"/     let b = p.deref_mut();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14208136,"byte_end":14208166,"line_start":1399,"line_end":1399,"column_start":5,"column_end":35}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4]);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14208171,"byte_end":14208212,"line_start":1400,"line_end":1400,"column_start":5,"column_end":46}},{"value":"/     b.push(5);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14208217,"byte_end":14208235,"line_start":1401,"line_end":1401,"column_start":5,"column_end":23}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14208240,"byte_end":14208284,"line_start":1402,"line_end":1402,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14208289,"byte_end":14208294,"line_start":1403,"line_end":1403,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14208299,"byte_end":14208302,"line_start":1404,"line_end":1404,"column_start":5,"column_end":8}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14208307,"byte_end":14208341,"line_start":1405,"line_end":1405,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14208346,"byte_end":14208358,"line_start":1406,"line_end":1406,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14208363,"byte_end":14208415,"line_start":1407,"line_end":1407,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14208420,"byte_end":14208425,"line_start":1408,"line_end":1408,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14208430,"byte_end":14208437,"line_start":1409,"line_end":1409,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14209798,"byte_end":14209804,"line_start":1446,"line_end":1446,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Shared>::as_ref","value":"unsafe fn as_ref(&Self) -> Option<&'g T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a reference.","sig":null,"attributes":[{"value":"/ Converts the pointer to a reference.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14208583,"byte_end":14208623,"line_start":1415,"line_end":1415,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14208628,"byte_end":14208631,"line_start":1416,"line_end":1416,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer is null, or else a reference to the object wrapped in `Some`.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14208636,"byte_end":14208731,"line_start":1417,"line_end":1417,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14208736,"byte_end":14208739,"line_start":1418,"line_end":1418,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14208744,"byte_end":14208756,"line_start":1419,"line_end":1419,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14208761,"byte_end":14208764,"line_start":1420,"line_end":1420,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14208769,"byte_end":14208854,"line_start":1421,"line_end":1421,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14208859,"byte_end":14208862,"line_start":1422,"line_end":1422,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14208867,"byte_end":14208958,"line_start":1423,"line_end":1423,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14208963,"byte_end":14209012,"line_start":1424,"line_end":1424,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14209017,"byte_end":14209020,"line_start":1425,"line_end":1425,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14209025,"byte_end":14209097,"line_start":1426,"line_end":1426,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14209102,"byte_end":14209177,"line_start":1427,"line_end":1427,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14209182,"byte_end":14209185,"line_start":1428,"line_end":1428,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14209190,"byte_end":14209283,"line_start":1429,"line_end":1429,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14209288,"byte_end":14209381,"line_start":1430,"line_end":1430,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14209386,"byte_end":14209424,"line_start":1431,"line_end":1431,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14209429,"byte_end":14209432,"line_start":1432,"line_end":1432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14209437,"byte_end":14209451,"line_start":1433,"line_end":1433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14209456,"byte_end":14209459,"line_start":1434,"line_end":1434,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14209464,"byte_end":14209471,"line_start":1435,"line_end":1435,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14209476,"byte_end":14209525,"line_start":1436,"line_end":1436,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14209530,"byte_end":14209574,"line_start":1437,"line_end":1437,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14209579,"byte_end":14209582,"line_start":1438,"line_end":1438,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14209587,"byte_end":14209617,"line_start":1439,"line_end":1439,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14209622,"byte_end":14209652,"line_start":1440,"line_end":1440,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14209657,"byte_end":14209691,"line_start":1441,"line_end":1441,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14209696,"byte_end":14209708,"line_start":1442,"line_end":1442,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.as_ref(), Some(&1234));","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14209713,"byte_end":14209757,"line_start":1443,"line_end":1443,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14209762,"byte_end":14209767,"line_start":1444,"line_end":1444,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14209772,"byte_end":14209779,"line_start":1445,"line_end":1445,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14210664,"byte_end":14210674,"line_start":1479,"line_end":1479,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Shared>::into_owned","value":"unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14209994,"byte_end":14210029,"line_start":1455,"line_end":1455,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14210034,"byte_end":14210037,"line_start":1456,"line_end":1456,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14210042,"byte_end":14210054,"line_start":1457,"line_end":1457,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14210059,"byte_end":14210062,"line_start":1458,"line_end":1458,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14210067,"byte_end":14210126,"line_start":1459,"line_end":1459,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14210131,"byte_end":14210134,"line_start":1460,"line_end":1460,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14210139,"byte_end":14210151,"line_start":1461,"line_end":1461,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14210156,"byte_end":14210159,"line_start":1462,"line_end":1462,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14210164,"byte_end":14210251,"line_start":1463,"line_end":1463,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14210256,"byte_end":14210289,"line_start":1464,"line_end":1464,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14210294,"byte_end":14210297,"line_start":1465,"line_end":1465,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14210302,"byte_end":14210316,"line_start":1466,"line_end":1466,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14210321,"byte_end":14210324,"line_start":1467,"line_end":1467,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14210329,"byte_end":14210336,"line_start":1468,"line_end":1468,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14210341,"byte_end":14210390,"line_start":1469,"line_end":1469,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14210395,"byte_end":14210439,"line_start":1470,"line_end":1470,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14210444,"byte_end":14210447,"line_start":1471,"line_end":1471,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14210452,"byte_end":14210482,"line_start":1472,"line_end":1472,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14210487,"byte_end":14210499,"line_start":1473,"line_end":1473,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14210504,"byte_end":14210546,"line_start":1474,"line_end":1474,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14210551,"byte_end":14210589,"line_start":1475,"line_end":1475,"column_start":5,"column_end":43}},{"value":"/     drop(p.into_owned());","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14210594,"byte_end":14210623,"line_start":1476,"line_end":1476,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14210628,"byte_end":14210633,"line_start":1477,"line_end":1477,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14210638,"byte_end":14210645,"line_start":1478,"line_end":1478,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14211234,"byte_end":14211237,"line_start":1497,"line_end":1497,"column_start":12,"column_end":15},"name":"tag","qualname":"<Shared>::tag","value":"fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14210826,"byte_end":14210872,"line_start":1484,"line_end":1484,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14210877,"byte_end":14210880,"line_start":1485,"line_end":1485,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14210885,"byte_end":14210899,"line_start":1486,"line_end":1486,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14210904,"byte_end":14210907,"line_start":1487,"line_end":1487,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14210912,"byte_end":14210919,"line_start":1488,"line_end":1488,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14210924,"byte_end":14210980,"line_start":1489,"line_end":1489,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14210985,"byte_end":14211029,"line_start":1490,"line_end":1490,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14211034,"byte_end":14211037,"line_start":1491,"line_end":1491,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<u64>::from(Owned::new(0u64).with_tag(2));","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14211042,"byte_end":14211104,"line_start":1492,"line_end":1492,"column_start":5,"column_end":67}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14211109,"byte_end":14211139,"line_start":1493,"line_end":1493,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14211144,"byte_end":14211178,"line_start":1494,"line_end":1494,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.tag(), 2);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14211183,"byte_end":14211210,"line_start":1495,"line_end":1495,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14211215,"byte_end":14211222,"line_start":1496,"line_end":1496,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14211911,"byte_end":14211919,"line_start":1520,"line_end":1520,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Shared>::with_tag","value":"fn with_tag(&Self, usize) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14211333,"byte_end":14211423,"line_start":1502,"line_end":1502,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14211428,"byte_end":14211466,"line_start":1503,"line_end":1503,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14211471,"byte_end":14211474,"line_start":1504,"line_end":1504,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14211479,"byte_end":14211493,"line_start":1505,"line_end":1505,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14211498,"byte_end":14211501,"line_start":1506,"line_end":1506,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14211506,"byte_end":14211513,"line_start":1507,"line_end":1507,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14211518,"byte_end":14211567,"line_start":1508,"line_end":1508,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14211572,"byte_end":14211616,"line_start":1509,"line_end":1509,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14211621,"byte_end":14211624,"line_start":1510,"line_end":1510,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(0u64);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14211629,"byte_end":14211659,"line_start":1511,"line_end":1511,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14211664,"byte_end":14211694,"line_start":1512,"line_end":1512,"column_start":5,"column_end":35}},{"value":"/ let p1 = a.load(SeqCst, guard);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14211699,"byte_end":14211734,"line_start":1513,"line_end":1513,"column_start":5,"column_end":40}},{"value":"/ let p2 = p1.with_tag(2);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14211739,"byte_end":14211767,"line_start":1514,"line_end":1514,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14211772,"byte_end":14211775,"line_start":1515,"line_end":1515,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p1.tag(), 0);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14211780,"byte_end":14211808,"line_start":1516,"line_end":1516,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p2.tag(), 2);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14211813,"byte_end":14211841,"line_start":1517,"line_end":1517,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p1.as_raw(), p2.as_raw());","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14211846,"byte_end":14211887,"line_start":1518,"line_end":1518,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14211892,"byte_end":14211899,"line_start":1519,"line_end":1519,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14212426,"byte_end":14212430,"line_start":1540,"line_end":1540,"column_start":8,"column_end":12},"name":"from","qualname":"<Shared as std::convert::From>::from","value":"fn from(*const T) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":" Returns a new pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to `raw`.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14212084,"byte_end":14212128,"line_start":1526,"line_end":1526,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14212133,"byte_end":14212136,"line_start":1527,"line_end":1527,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14212141,"byte_end":14212153,"line_start":1528,"line_end":1528,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14212158,"byte_end":14212161,"line_start":1529,"line_end":1529,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14212166,"byte_end":14212210,"line_start":1530,"line_end":1530,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14212215,"byte_end":14212218,"line_start":1531,"line_end":1531,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14212223,"byte_end":14212237,"line_start":1532,"line_end":1532,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14212242,"byte_end":14212245,"line_start":1533,"line_end":1533,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14212250,"byte_end":14212257,"line_start":1534,"line_end":1534,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14212262,"byte_end":14212294,"line_start":1535,"line_end":1535,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14212299,"byte_end":14212302,"line_start":1536,"line_end":1536,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::from(Box::into_raw(Box::new(1234)) as *const _);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14212307,"byte_end":14212375,"line_start":1537,"line_end":1537,"column_start":5,"column_end":73}},{"value":"/ assert!(!p.is_null());","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14212380,"byte_end":14212406,"line_start":1538,"line_end":1538,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14212411,"byte_end":14212418,"line_start":1539,"line_end":1539,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14212656,"byte_end":14212658,"line_start":1548,"line_end":1548,"column_start":8,"column_end":10},"name":"eq","qualname":"<Shared as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Self) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14212869,"byte_end":14212880,"line_start":1556,"line_end":1556,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Shared as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &Self) -> Option<cmp::Ordering>","parent":{"krate":2,"index":2877},"children":[],"decl_id":{"krate":2,"index":2879},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14213040,"byte_end":14213043,"line_start":1562,"line_end":1562,"column_start":8,"column_end":11},"name":"cmp","qualname":"<Shared as std::cmp::Ord>::cmp","value":"fn cmp(&Self, &Self) -> cmp::Ordering","parent":{"krate":2,"index":2867},"children":[],"decl_id":{"krate":2,"index":2868},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14213194,"byte_end":14213197,"line_start":1568,"line_end":1568,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Shared as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14213503,"byte_end":14213506,"line_start":1579,"line_end":1579,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Shared as std::fmt::Pointer>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10125},"children":[],"decl_id":{"krate":2,"index":10126},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14213700,"byte_end":14213707,"line_start":1585,"line_end":1585,"column_start":8,"column_end":15},"name":"default","qualname":"<Shared as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":371},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14214848,"byte_end":14214857,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Collector","qualname":"::collector::Collector","value":"Collector {  }","parent":null,"children":[{"krate":0,"index":372}],"decl_id":null,"docs":" An epoch-based garbage collector.\n","sig":null,"attributes":[{"value":"/ An epoch-based garbage collector.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14214799,"byte_end":14214836,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14215004,"byte_end":14215011,"line_start":30,"line_end":30,"column_start":8,"column_end":15},"name":"default","qualname":"<Collector as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14215164,"byte_end":14215167,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Collector>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collector.\n","sig":null,"attributes":[{"value":"/ Creates a new collector.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14215124,"byte_end":14215152,"line_start":38,"line_end":38,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14215272,"byte_end":14215280,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"register","qualname":"<Collector>::register","value":"fn register(&Self) -> LocalHandle","parent":null,"children":[],"decl_id":null,"docs":" Registers a new handle for the collector.\n","sig":null,"attributes":[{"value":"/ Registers a new handle for the collector.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14215215,"byte_end":14215260,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14215443,"byte_end":14215448,"line_start":51,"line_end":51,"column_start":8,"column_end":13},"name":"clone","qualname":"<Collector as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":" Creates another reference to the same garbage collector.\n","sig":null,"attributes":[{"value":"/ Creates another reference to the same garbage collector.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14215375,"byte_end":14215435,"line_start":50,"line_end":50,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14215585,"byte_end":14215588,"line_start":59,"line_end":59,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Collector as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14215782,"byte_end":14215784,"line_start":66,"line_end":66,"column_start":8,"column_end":10},"name":"eq","qualname":"<Collector as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Collector) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":" Checks if both handles point to the same collector.\n","sig":null,"attributes":[{"value":"/ Checks if both handles point to the same collector.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14215719,"byte_end":14215774,"line_start":65,"line_end":65,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":387},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14215948,"byte_end":14215959,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"LocalHandle","qualname":"::collector::LocalHandle","value":"LocalHandle {  }","parent":null,"children":[{"krate":0,"index":388}],"decl_id":null,"docs":" A handle to a garbage collector.\n","sig":null,"attributes":[{"value":"/ A handle to a garbage collector.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14215900,"byte_end":14215936,"line_start":72,"line_end":72,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14216070,"byte_end":14216073,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"pin","qualname":"<LocalHandle>::pin","value":"fn pin(&Self) -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the handle.\n","sig":null,"attributes":[{"value":"/ Pins the handle.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14216024,"byte_end":14216044,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14216049,"byte_end":14216058,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14216211,"byte_end":14216220,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"is_pinned","qualname":"<LocalHandle>::is_pinned","value":"fn is_pinned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the handle is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the handle is pinned.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14216142,"byte_end":14216185,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14216190,"byte_end":14216199,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14216376,"byte_end":14216385,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"collector","qualname":"<LocalHandle>::collector","value":"fn collector(&Self) -> &Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this handle.\n","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this handle.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14216294,"byte_end":14216350,"line_start":90,"line_end":90,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14216355,"byte_end":14216364,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14216512,"byte_end":14216516,"line_start":99,"line_end":99,"column_start":8,"column_end":12},"name":"drop","qualname":"<LocalHandle as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3422},"children":[],"decl_id":{"krate":2,"index":3423},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14216495,"byte_end":14216504,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14216656,"byte_end":14216659,"line_start":107,"line_end":107,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LocalHandle as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":475},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14237037,"byte_end":14237042,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"Guard","qualname":"::guard::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":476}],"decl_id":null,"docs":" A guard that keeps the current thread pinned.","sig":null,"attributes":[{"value":"/ A guard that keeps the current thread pinned.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14235321,"byte_end":14235370,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14235371,"byte_end":14235374,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14235375,"byte_end":14235388,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14235389,"byte_end":14235392,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The current thread is pinned by calling [`pin`], which returns a new guard:","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14235393,"byte_end":14235472,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14235473,"byte_end":14235476,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14235477,"byte_end":14235484,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14235485,"byte_end":14235518,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14235519,"byte_end":14235522,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // It is often convenient to prefix a call to `pin` with a `&` in order to create a reference.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14235523,"byte_end":14235621,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/ // This is not really necessary, but makes passing references to the guard a bit easier.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14235622,"byte_end":14235714,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14235715,"byte_end":14235745,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14235746,"byte_end":14235753,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14235754,"byte_end":14235757,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ When a guard gets dropped, the current thread is automatically unpinned.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14235758,"byte_end":14235834,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14235835,"byte_end":14235838,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Pointers on the stack","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14235839,"byte_end":14235866,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14235867,"byte_end":14235870,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Having a guard allows us to create pointers on the stack to heap-allocated objects.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14235871,"byte_end":14235958,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/ For example:","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14235959,"byte_end":14235975,"line_start":30,"line_end":30,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14235976,"byte_end":14235979,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14235980,"byte_end":14235987,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14235988,"byte_end":14236037,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236038,"byte_end":14236082,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236083,"byte_end":14236086,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Create a heap-allocated number.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236087,"byte_end":14236125,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236126,"byte_end":14236155,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236156,"byte_end":14236159,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Pin the current thread.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236160,"byte_end":14236190,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236191,"byte_end":14236221,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236222,"byte_end":14236225,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Load the heap-allocated object and create pointer `p` on the stack.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236226,"byte_end":14236300,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236301,"byte_end":14236335,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236336,"byte_end":14236339,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Dereference the pointer and print the value:","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236340,"byte_end":14236391,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/ if let Some(num) = unsafe { p.as_ref() } {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236392,"byte_end":14236438,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/     println!(\"The number is {}.\", num);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236439,"byte_end":14236482,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236483,"byte_end":14236488,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236489,"byte_end":14236496,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236497,"byte_end":14236500,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Multiple guards","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236501,"byte_end":14236522,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236523,"byte_end":14236526,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Pinning is reentrant and it is perfectly legal to create multiple guards. In that case, the","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236527,"byte_end":14236622,"line_start":53,"line_end":53,"column_start":1,"column_end":96}},{"value":"/ thread will actually be pinned only when the first guard is created and unpinned when the last","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236623,"byte_end":14236721,"line_start":54,"line_end":54,"column_start":1,"column_end":99}},{"value":"/ one is dropped:","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236722,"byte_end":14236741,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236742,"byte_end":14236745,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236746,"byte_end":14236753,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236754,"byte_end":14236787,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236788,"byte_end":14236791,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236792,"byte_end":14236822,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236823,"byte_end":14236853,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236854,"byte_end":14236886,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/ drop(guard1);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236887,"byte_end":14236904,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236905,"byte_end":14236937,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ drop(guard2);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236938,"byte_end":14236955,"line_start":65,"line_end":65,"column_start":1,"column_end":18}},{"value":"/ assert!(!epoch::is_pinned());","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236956,"byte_end":14236989,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236990,"byte_end":14236997,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14236998,"byte_end":14237001,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [`pin`]: super::pin","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14237002,"byte_end":14237025,"line_start":69,"line_end":69,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14238017,"byte_end":14238022,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"defer","qualname":"<Guard>::defer","value":"fn defer<F, R>(&Self, F) where F: FnOnce() -> R, F: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14237101,"byte_end":14237190,"line_start":75,"line_end":75,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14237195,"byte_end":14237220,"line_start":76,"line_end":76,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14237225,"byte_end":14237228,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14237233,"byte_end":14237326,"line_start":78,"line_end":78,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14237331,"byte_end":14237419,"line_start":79,"line_end":79,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14237424,"byte_end":14237514,"line_start":80,"line_end":80,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14237519,"byte_end":14237559,"line_start":81,"line_end":81,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14237564,"byte_end":14237567,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14237572,"byte_end":14237662,"line_start":83,"line_end":83,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14237667,"byte_end":14237758,"line_start":84,"line_end":84,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14237763,"byte_end":14237850,"line_start":85,"line_end":85,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14237855,"byte_end":14237875,"line_start":86,"line_end":86,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14237880,"byte_end":14237883,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14237888,"byte_end":14237975,"line_start":88,"line_end":88,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14237980,"byte_end":14238005,"line_start":89,"line_end":89,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14242322,"byte_end":14242337,"line_start":188,"line_end":188,"column_start":19,"column_end":34},"name":"defer_unchecked","qualname":"<Guard>::defer_unchecked","value":"unsafe fn defer_unchecked<F, R>(&Self, F) where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14238186,"byte_end":14238275,"line_start":100,"line_end":100,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14238280,"byte_end":14238305,"line_start":101,"line_end":101,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14238310,"byte_end":14238313,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14238318,"byte_end":14238411,"line_start":103,"line_end":103,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14238416,"byte_end":14238504,"line_start":104,"line_end":104,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14238509,"byte_end":14238599,"line_start":105,"line_end":105,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14238604,"byte_end":14238644,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14238649,"byte_end":14238652,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14238657,"byte_end":14238747,"line_start":108,"line_end":108,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14238752,"byte_end":14238843,"line_start":109,"line_end":109,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14238848,"byte_end":14238935,"line_start":110,"line_end":110,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14238940,"byte_end":14238960,"line_start":111,"line_end":111,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14238965,"byte_end":14238968,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14238973,"byte_end":14239060,"line_start":113,"line_end":113,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14239065,"byte_end":14239090,"line_start":114,"line_end":114,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14239095,"byte_end":14239098,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14239103,"byte_end":14239115,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14239120,"byte_end":14239123,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The given function must not hold reference onto the stack. It is highly recommended that","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14239128,"byte_end":14239220,"line_start":118,"line_end":118,"column_start":5,"column_end":97}},{"value":"/ the passed function is **always** marked with `move` in order to prevent accidental","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14239225,"byte_end":14239312,"line_start":119,"line_end":119,"column_start":5,"column_end":92}},{"value":"/ borrows.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14239317,"byte_end":14239329,"line_start":120,"line_end":120,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14239334,"byte_end":14239337,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14239342,"byte_end":14239349,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14239354,"byte_end":14239387,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14239392,"byte_end":14239395,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14239400,"byte_end":14239430,"line_start":125,"line_end":125,"column_start":5,"column_end":35}},{"value":"/ let message = \"Hello!\";","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14239435,"byte_end":14239462,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ unsafe {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14239467,"byte_end":14239479,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/     // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14239484,"byte_end":14239559,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/     guard.defer_unchecked(move || {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14239564,"byte_end":14239603,"line_start":129,"line_end":129,"column_start":5,"column_end":44}},{"value":"/         println!(\"{}\", message);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14239608,"byte_end":14239644,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14239649,"byte_end":14239660,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14239665,"byte_end":14239670,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14239675,"byte_end":14239682,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14239687,"byte_end":14239690,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute `f`, so anything accessed by","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14239695,"byte_end":14239789,"line_start":135,"line_end":135,"column_start":5,"column_end":99}},{"value":"/ the closure must be `Send`.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14239794,"byte_end":14239825,"line_start":136,"line_end":136,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14239830,"byte_end":14239833,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `F: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14239838,"byte_end":14239933,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ `F: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14239938,"byte_end":14240030,"line_start":139,"line_end":139,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14240035,"byte_end":14240124,"line_start":140,"line_end":140,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14240129,"byte_end":14240132,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14240137,"byte_end":14240150,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14240155,"byte_end":14240208,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ guard.defer_unchecked(move || shared.into_owned()); // `Shared` is not `Send`!","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14240213,"byte_end":14240295,"line_start":144,"line_end":144,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14240300,"byte_end":14240307,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14240312,"byte_end":14240315,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the deferred function,","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14240320,"byte_end":14240413,"line_start":147,"line_end":147,"column_start":5,"column_end":98}},{"value":"/ because it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14240418,"byte_end":14240513,"line_start":148,"line_end":148,"column_start":5,"column_end":100}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14240518,"byte_end":14240578,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14240583,"byte_end":14240586,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14240591,"byte_end":14240605,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14240610,"byte_end":14240613,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14240618,"byte_end":14240704,"line_start":153,"line_end":153,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14240709,"byte_end":14240803,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14240808,"byte_end":14240904,"line_start":155,"line_end":155,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14240909,"byte_end":14241001,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14241006,"byte_end":14241062,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14241067,"byte_end":14241070,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14241075,"byte_end":14241082,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14241087,"byte_end":14241143,"line_start":160,"line_end":160,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14241148,"byte_end":14241192,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14241197,"byte_end":14241200,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14241205,"byte_end":14241236,"line_start":163,"line_end":163,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14241241,"byte_end":14241244,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14241249,"byte_end":14241326,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14241331,"byte_end":14241362,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14241367,"byte_end":14241370,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14241375,"byte_end":14241405,"line_start":168,"line_end":168,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14241410,"byte_end":14241440,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14241445,"byte_end":14241448,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14241453,"byte_end":14241530,"line_start":171,"line_end":171,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14241535,"byte_end":14241607,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14241612,"byte_end":14241615,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14241620,"byte_end":14241641,"line_start":174,"line_end":174,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14241646,"byte_end":14241706,"line_start":175,"line_end":175,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14241711,"byte_end":14241793,"line_start":176,"line_end":176,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14241798,"byte_end":14241814,"line_start":177,"line_end":177,"column_start":5,"column_end":21}},{"value":"/         // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14241819,"byte_end":14241898,"line_start":178,"line_end":178,"column_start":5,"column_end":84}},{"value":"/         guard.defer_unchecked(move || {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14241903,"byte_end":14241946,"line_start":179,"line_end":179,"column_start":5,"column_end":48}},{"value":"/             println!(\"{} is now being deallocated.\", p.deref());","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14241951,"byte_end":14242019,"line_start":180,"line_end":180,"column_start":5,"column_end":73}},{"value":"/             // Now we have unique access to the object pointed to by `p` and can turn it","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14242024,"byte_end":14242116,"line_start":181,"line_end":181,"column_start":5,"column_end":97}},{"value":"/             // into an `Owned`. Dropping the `Owned` will deallocate the object.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14242121,"byte_end":14242205,"line_start":182,"line_end":182,"column_start":5,"column_end":89}},{"value":"/             drop(p.into_owned());","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14242210,"byte_end":14242247,"line_start":183,"line_end":183,"column_start":5,"column_end":42}},{"value":"/         });","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14242252,"byte_end":14242267,"line_start":184,"line_end":184,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14242272,"byte_end":14242281,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14242286,"byte_end":14242291,"line_start":186,"line_end":186,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14242296,"byte_end":14242303,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14245924,"byte_end":14245937,"line_start":267,"line_end":267,"column_start":19,"column_end":32},"name":"defer_destroy","qualname":"<Guard>::defer_destroy","value":"unsafe fn defer_destroy<T>(&Self, Shared<, T>)","parent":null,"children":[],"decl_id":null,"docs":" Stores a destructor for an object so that it can be deallocated and dropped at some point\n after all currently pinned threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a destructor for an object so that it can be deallocated and dropped at some point","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14242576,"byte_end":14242669,"line_start":199,"line_end":199,"column_start":5,"column_end":98}},{"value":"/ after all currently pinned threads get unpinned.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14242674,"byte_end":14242726,"line_start":200,"line_end":200,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14242731,"byte_end":14242734,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This method first stores the destructor into the thread-local (or handle-local) cache. If","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14242739,"byte_end":14242832,"line_start":202,"line_end":202,"column_start":5,"column_end":98}},{"value":"/ this cache becomes full, some destructors are moved into the global cache. At the same","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14242837,"byte_end":14242927,"line_start":203,"line_end":203,"column_start":5,"column_end":95}},{"value":"/ time, some destructors from both local and global caches may get executed in order to","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14242932,"byte_end":14243021,"line_start":204,"line_end":204,"column_start":5,"column_end":94}},{"value":"/ incrementally clean up the caches as they fill up.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14243026,"byte_end":14243080,"line_start":205,"line_end":205,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14243085,"byte_end":14243088,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly the destructor will be executed. The only guarantee is","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14243093,"byte_end":14243186,"line_start":207,"line_end":207,"column_start":5,"column_end":98}},{"value":"/ that it won't be executed until all currently pinned threads get unpinned. In theory, the","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14243191,"byte_end":14243284,"line_start":208,"line_end":208,"column_start":5,"column_end":98}},{"value":"/ destructor might never run, but the epoch-based garbage collection will make an effort to","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14243289,"byte_end":14243382,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"/ execute it reasonably soon.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14243387,"byte_end":14243418,"line_start":210,"line_end":210,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14243423,"byte_end":14243426,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the destructor will simply be","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14243431,"byte_end":14243520,"line_start":212,"line_end":212,"column_start":5,"column_end":94}},{"value":"/ executed immediately.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14243525,"byte_end":14243550,"line_start":213,"line_end":213,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14243555,"byte_end":14243558,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14243563,"byte_end":14243575,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14243580,"byte_end":14243583,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The object must not be reachable by other threads anymore, otherwise it might be still in","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14243588,"byte_end":14243681,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/ use when the destructor runs.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14243686,"byte_end":14243719,"line_start":218,"line_end":218,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14243724,"byte_end":14243727,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute the destructor, so the object","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14243732,"byte_end":14243827,"line_start":220,"line_end":220,"column_start":5,"column_end":100}},{"value":"/ must be sendable to other threads.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14243832,"byte_end":14243870,"line_start":221,"line_end":221,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14243875,"byte_end":14243878,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `T: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14243883,"byte_end":14243978,"line_start":223,"line_end":223,"column_start":5,"column_end":100}},{"value":"/ `T: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14243983,"byte_end":14244075,"line_start":224,"line_end":224,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14244080,"byte_end":14244169,"line_start":225,"line_end":225,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14244174,"byte_end":14244177,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14244182,"byte_end":14244195,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14244200,"byte_end":14244253,"line_start":228,"line_end":228,"column_start":5,"column_end":58}},{"value":"/ guard.defer_destroy(shared); // `Shared` is not `Send`!","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14244258,"byte_end":14244317,"line_start":229,"line_end":229,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14244322,"byte_end":14244329,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14244334,"byte_end":14244337,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the destructor, because","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14244342,"byte_end":14244436,"line_start":232,"line_end":232,"column_start":5,"column_end":99}},{"value":"/ it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14244441,"byte_end":14244528,"line_start":233,"line_end":233,"column_start":5,"column_end":92}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14244533,"byte_end":14244593,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14244598,"byte_end":14244601,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14244606,"byte_end":14244620,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14244625,"byte_end":14244628,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14244633,"byte_end":14244719,"line_start":238,"line_end":238,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14244724,"byte_end":14244818,"line_start":239,"line_end":239,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14244823,"byte_end":14244919,"line_start":240,"line_end":240,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14244924,"byte_end":14245016,"line_start":241,"line_end":241,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14245021,"byte_end":14245077,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14245082,"byte_end":14245085,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14245090,"byte_end":14245097,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14245102,"byte_end":14245158,"line_start":245,"line_end":245,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14245163,"byte_end":14245207,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14245212,"byte_end":14245215,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14245220,"byte_end":14245251,"line_start":248,"line_end":248,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14245256,"byte_end":14245259,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14245264,"byte_end":14245341,"line_start":250,"line_end":250,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14245346,"byte_end":14245377,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14245382,"byte_end":14245385,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14245390,"byte_end":14245420,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14245425,"byte_end":14245455,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14245460,"byte_end":14245463,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14245468,"byte_end":14245545,"line_start":256,"line_end":256,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14245550,"byte_end":14245622,"line_start":257,"line_end":257,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14245627,"byte_end":14245630,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14245635,"byte_end":14245656,"line_start":259,"line_end":259,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14245661,"byte_end":14245721,"line_start":260,"line_end":260,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14245726,"byte_end":14245808,"line_start":261,"line_end":261,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14245813,"byte_end":14245829,"line_start":262,"line_end":262,"column_start":5,"column_end":21}},{"value":"/         guard.defer_destroy(p);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14245834,"byte_end":14245869,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14245874,"byte_end":14245883,"line_start":264,"line_end":264,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14245888,"byte_end":14245893,"line_start":265,"line_end":265,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14245898,"byte_end":14245905,"line_start":266,"line_end":266,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14246822,"byte_end":14246827,"line_start":291,"line_end":291,"column_start":12,"column_end":17},"name":"flush","qualname":"<Guard>::flush","value":"fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears up the thread-local cache of deferred functions by executing them or moving into the\n global cache.","sig":null,"attributes":[{"value":"/ Clears up the thread-local cache of deferred functions by executing them or moving into the","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14246037,"byte_end":14246132,"line_start":271,"line_end":271,"column_start":5,"column_end":100}},{"value":"/ global cache.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14246137,"byte_end":14246154,"line_start":272,"line_end":272,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14246159,"byte_end":14246162,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Call this method after deferring execution of a function if you want to get it executed as","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14246167,"byte_end":14246261,"line_start":274,"line_end":274,"column_start":5,"column_end":99}},{"value":"/ soon as possible. Flushing will make sure it is residing in in the global cache, so that","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14246266,"byte_end":14246358,"line_start":275,"line_end":275,"column_start":5,"column_end":97}},{"value":"/ any thread has a chance of taking the function and executing it.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14246363,"byte_end":14246431,"line_start":276,"line_end":276,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14246436,"byte_end":14246439,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, it is a no-op (nothing happens).","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14246444,"byte_end":14246536,"line_start":278,"line_end":278,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14246541,"byte_end":14246544,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14246549,"byte_end":14246563,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14246568,"byte_end":14246571,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14246576,"byte_end":14246583,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14246588,"byte_end":14246621,"line_start":283,"line_end":283,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14246626,"byte_end":14246629,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14246634,"byte_end":14246664,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/ guard.defer(move || {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14246669,"byte_end":14246694,"line_start":286,"line_end":286,"column_start":5,"column_end":30}},{"value":"/     println!(\"This better be printed as soon as possible!\");","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14246699,"byte_end":14246763,"line_start":287,"line_end":287,"column_start":5,"column_end":69}},{"value":"/ });","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14246768,"byte_end":14246775,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ guard.flush();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14246780,"byte_end":14246798,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14246803,"byte_end":14246810,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14247989,"byte_end":14247994,"line_start":324,"line_end":324,"column_start":12,"column_end":17},"name":"repin","qualname":"<Guard>::repin","value":"fn repin(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Unpins and then immediately re-pins the thread.","sig":null,"attributes":[{"value":"/ Unpins and then immediately re-pins the thread.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14246951,"byte_end":14247002,"line_start":297,"line_end":297,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14247007,"byte_end":14247010,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you don't want delay the advancement of the global epoch by","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14247015,"byte_end":14247105,"line_start":299,"line_end":299,"column_start":5,"column_end":95}},{"value":"/ holding an old epoch. For safety, you should not maintain any guard-based reference across","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14247110,"byte_end":14247204,"line_start":300,"line_end":300,"column_start":5,"column_end":99}},{"value":"/ the call (the latter is enforced by `&mut self`). The thread will only be repinned if this","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14247209,"byte_end":14247303,"line_start":301,"line_end":301,"column_start":5,"column_end":99}},{"value":"/ is the only active guard for the current thread.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14247308,"byte_end":14247360,"line_start":302,"line_end":302,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14247365,"byte_end":14247368,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the call will be just no-op.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14247373,"byte_end":14247466,"line_start":304,"line_end":304,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14247471,"byte_end":14247474,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14247479,"byte_end":14247493,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14247498,"byte_end":14247501,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14247506,"byte_end":14247513,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14247518,"byte_end":14247567,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14247572,"byte_end":14247616,"line_start":310,"line_end":310,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14247621,"byte_end":14247624,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14247629,"byte_end":14247658,"line_start":312,"line_end":312,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14247663,"byte_end":14247696,"line_start":313,"line_end":313,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14247701,"byte_end":14247706,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14247711,"byte_end":14247750,"line_start":315,"line_end":315,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14247755,"byte_end":14247809,"line_start":316,"line_end":316,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14247814,"byte_end":14247819,"line_start":317,"line_end":317,"column_start":5,"column_end":10}},{"value":"/ guard.repin();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14247824,"byte_end":14247842,"line_start":318,"line_end":318,"column_start":5,"column_end":23}},{"value":"/ {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14247847,"byte_end":14247852,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14247857,"byte_end":14247896,"line_start":320,"line_end":320,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14247901,"byte_end":14247955,"line_start":321,"line_end":321,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14247960,"byte_end":14247965,"line_start":322,"line_end":322,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14247970,"byte_end":14247977,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14249321,"byte_end":14249332,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"name":"repin_after","qualname":"<Guard>::repin_after","value":"fn repin_after<F, R>(&mut Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unpins the thread, executes the given function and then re-pins the thread.","sig":null,"attributes":[{"value":"/ Temporarily unpins the thread, executes the given function and then re-pins the thread.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14248118,"byte_end":14248209,"line_start":330,"line_end":330,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14248214,"byte_end":14248217,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to perform a long-running operation (e.g. sleeping)","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14248222,"byte_end":14248313,"line_start":332,"line_end":332,"column_start":5,"column_end":96}},{"value":"/ and don't need to maintain any guard-based reference across the call (the latter is enforced","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14248318,"byte_end":14248414,"line_start":333,"line_end":333,"column_start":5,"column_end":101}},{"value":"/ by `&mut self`). The thread will only be unpinned if this is the only active guard for the","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14248419,"byte_end":14248513,"line_start":334,"line_end":334,"column_start":5,"column_end":99}},{"value":"/ current thread.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14248518,"byte_end":14248537,"line_start":335,"line_end":335,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14248542,"byte_end":14248545,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the passed function is called","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14248550,"byte_end":14248644,"line_start":337,"line_end":337,"column_start":5,"column_end":99}},{"value":"/ directly without unpinning the thread.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14248649,"byte_end":14248691,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14248696,"byte_end":14248699,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14248704,"byte_end":14248718,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14248723,"byte_end":14248726,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14248731,"byte_end":14248738,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14248743,"byte_end":14248792,"line_start":343,"line_end":343,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14248797,"byte_end":14248841,"line_start":344,"line_end":344,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14248846,"byte_end":14248866,"line_start":345,"line_end":345,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14248871,"byte_end":14248899,"line_start":346,"line_end":346,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14248904,"byte_end":14248907,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14248912,"byte_end":14248941,"line_start":348,"line_end":348,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14248946,"byte_end":14248979,"line_start":349,"line_end":349,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14248984,"byte_end":14248989,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14248994,"byte_end":14249033,"line_start":351,"line_end":351,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14249038,"byte_end":14249092,"line_start":352,"line_end":352,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14249097,"byte_end":14249102,"line_start":353,"line_end":353,"column_start":5,"column_end":10}},{"value":"/ guard.repin_after(|| thread::sleep(Duration::from_millis(50)));","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14249107,"byte_end":14249174,"line_start":354,"line_end":354,"column_start":5,"column_end":72}},{"value":"/ {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14249179,"byte_end":14249184,"line_start":355,"line_end":355,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14249189,"byte_end":14249228,"line_start":356,"line_end":356,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14249233,"byte_end":14249287,"line_start":357,"line_end":357,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14249292,"byte_end":14249297,"line_start":358,"line_end":358,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14249302,"byte_end":14249309,"line_start":359,"line_end":359,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14250478,"byte_end":14250487,"line_start":398,"line_end":398,"column_start":12,"column_end":21},"name":"collector","qualname":"<Guard>::collector","value":"fn collector(&Self) -> Option<&Collector>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this guard.","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this guard.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14249937,"byte_end":14249992,"line_start":382,"line_end":382,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14249997,"byte_end":14250000,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to ensure that all guards used with","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14250005,"byte_end":14250080,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ a data structure come from the same collector.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14250085,"byte_end":14250135,"line_start":385,"line_end":385,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14250140,"byte_end":14250143,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then `None` is returned.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14250148,"byte_end":14250232,"line_start":387,"line_end":387,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14250237,"byte_end":14250240,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14250245,"byte_end":14250259,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14250264,"byte_end":14250267,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14250272,"byte_end":14250279,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14250284,"byte_end":14250317,"line_start":392,"line_end":392,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14250322,"byte_end":14250325,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14250330,"byte_end":14250360,"line_start":394,"line_end":394,"column_start":5,"column_end":35}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14250365,"byte_end":14250395,"line_start":395,"line_end":395,"column_start":5,"column_end":35}},{"value":"/ assert!(guard1.collector() == guard2.collector());","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14250400,"byte_end":14250454,"line_start":396,"line_end":396,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14250459,"byte_end":14250466,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14250641,"byte_end":14250645,"line_start":405,"line_end":405,"column_start":8,"column_end":12},"name":"drop","qualname":"<Guard as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3422},"children":[],"decl_id":{"krate":2,"index":3423},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14250624,"byte_end":14250633,"line_start":404,"line_end":404,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14250802,"byte_end":14250805,"line_start":413,"line_end":413,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Guard as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":499},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14253786,"byte_end":14253797,"line_start":504,"line_end":504,"column_start":15,"column_end":26},"name":"unprotected","qualname":"::guard::unprotected","value":"unsafe fn unprotected() -> &'static Guard","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","sig":null,"attributes":[{"value":"/ Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14250897,"byte_end":14250984,"line_start":418,"line_end":418,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14250985,"byte_end":14250988,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ This guard should be used in special occasions only. Note that it doesn't actually keep any","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14250989,"byte_end":14251084,"line_start":420,"line_end":420,"column_start":1,"column_end":96}},{"value":"/ thread pinned - it's just a fake guard that allows loading from [`Atomic`]s unsafely.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14251085,"byte_end":14251174,"line_start":421,"line_end":421,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14251175,"byte_end":14251178,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ Note that calling [`defer`] with a dummy guard will not defer the function - it will just","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14251179,"byte_end":14251272,"line_start":423,"line_end":423,"column_start":1,"column_end":94}},{"value":"/ execute the function immediately.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14251273,"byte_end":14251310,"line_start":424,"line_end":424,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14251311,"byte_end":14251314,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ If necessary, it's possible to create more dummy guards by cloning: `unprotected().clone()`.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14251315,"byte_end":14251411,"line_start":426,"line_end":426,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14251412,"byte_end":14251415,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14251416,"byte_end":14251428,"line_start":428,"line_end":428,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14251429,"byte_end":14251432,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ Loading and dereferencing data from an [`Atomic`] using this guard is safe only if the","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14251433,"byte_end":14251523,"line_start":430,"line_end":430,"column_start":1,"column_end":91}},{"value":"/ [`Atomic`] is not being concurrently modified by other threads.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14251524,"byte_end":14251591,"line_start":431,"line_end":431,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14251592,"byte_end":14251595,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14251596,"byte_end":14251610,"line_start":433,"line_end":433,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14251611,"byte_end":14251614,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14251615,"byte_end":14251622,"line_start":435,"line_end":435,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14251623,"byte_end":14251672,"line_start":436,"line_end":436,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14251673,"byte_end":14251718,"line_start":437,"line_end":437,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14251719,"byte_end":14251722,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ let a = Atomic::new(7);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14251723,"byte_end":14251750,"line_start":439,"line_end":439,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14251751,"byte_end":14251754,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14251755,"byte_end":14251767,"line_start":441,"line_end":441,"column_start":1,"column_end":13}},{"value":"/     // Load `a` without pinning the current thread.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14251768,"byte_end":14251823,"line_start":442,"line_end":442,"column_start":1,"column_end":56}},{"value":"/     a.load(Relaxed, epoch::unprotected());","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14251824,"byte_end":14251870,"line_start":443,"line_end":443,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14251871,"byte_end":14251874,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/     // It's possible to create more dummy guards by calling `clone()`.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14251875,"byte_end":14251949,"line_start":445,"line_end":445,"column_start":1,"column_end":75}},{"value":"/     let dummy = &epoch::unprotected().clone();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14251950,"byte_end":14252000,"line_start":446,"line_end":446,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14252001,"byte_end":14252004,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/     dummy.defer(move || {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14252005,"byte_end":14252034,"line_start":448,"line_end":448,"column_start":1,"column_end":30}},{"value":"/         println!(\"This gets executed immediately.\");","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14252035,"byte_end":14252091,"line_start":449,"line_end":449,"column_start":1,"column_end":57}},{"value":"/     });","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14252092,"byte_end":14252103,"line_start":450,"line_end":450,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14252104,"byte_end":14252107,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/     // Dropping `dummy` doesn't affect the current thread - it's just a noop.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14252108,"byte_end":14252189,"line_start":452,"line_end":452,"column_start":1,"column_end":82}},{"value":"/ }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14252190,"byte_end":14252195,"line_start":453,"line_end":453,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14252196,"byte_end":14252203,"line_start":454,"line_end":454,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14252204,"byte_end":14252207,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ The most common use of this function is when constructing or destructing a data structure.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14252208,"byte_end":14252302,"line_start":456,"line_end":456,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14252303,"byte_end":14252306,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ For example, we can use a dummy guard in the destructor of a Treiber stack because at that","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14252307,"byte_end":14252401,"line_start":458,"line_end":458,"column_start":1,"column_end":95}},{"value":"/ point no other thread could concurrently modify the [`Atomic`]s we are accessing.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14252402,"byte_end":14252487,"line_start":459,"line_end":459,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14252488,"byte_end":14252491,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ If we were to actually pin the current thread during destruction, that would just unnecessarily","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14252492,"byte_end":14252591,"line_start":461,"line_end":461,"column_start":1,"column_end":100}},{"value":"/ delay garbage collection and incur some performance cost, so in cases like these `unprotected`","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14252592,"byte_end":14252690,"line_start":462,"line_end":462,"column_start":1,"column_end":99}},{"value":"/ is very helpful.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14252691,"byte_end":14252711,"line_start":463,"line_end":463,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14252712,"byte_end":14252715,"line_start":464,"line_end":464,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14252716,"byte_end":14252723,"line_start":465,"line_end":465,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14252724,"byte_end":14252773,"line_start":466,"line_end":466,"column_start":1,"column_end":50}},{"value":"/ use std::mem::ManuallyDrop;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14252774,"byte_end":14252805,"line_start":467,"line_end":467,"column_start":1,"column_end":32}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14252806,"byte_end":14252851,"line_start":468,"line_end":468,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14252852,"byte_end":14252855,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ struct Stack<T> {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14252856,"byte_end":14252877,"line_start":470,"line_end":470,"column_start":1,"column_end":22}},{"value":"/     head: Atomic<Node<T>>,","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14252878,"byte_end":14252908,"line_start":471,"line_end":471,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14252909,"byte_end":14252914,"line_start":472,"line_end":472,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14252915,"byte_end":14252918,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ struct Node<T> {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14252919,"byte_end":14252939,"line_start":474,"line_end":474,"column_start":1,"column_end":21}},{"value":"/     data: ManuallyDrop<T>,","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14252940,"byte_end":14252970,"line_start":475,"line_end":475,"column_start":1,"column_end":31}},{"value":"/     next: Atomic<Node<T>>,","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14252971,"byte_end":14253001,"line_start":476,"line_end":476,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14253002,"byte_end":14253007,"line_start":477,"line_end":477,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14253008,"byte_end":14253011,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ impl<T> Drop for Stack<T> {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14253012,"byte_end":14253043,"line_start":479,"line_end":479,"column_start":1,"column_end":32}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14253044,"byte_end":14253072,"line_start":480,"line_end":480,"column_start":1,"column_end":29}},{"value":"/         unsafe {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14253073,"byte_end":14253093,"line_start":481,"line_end":481,"column_start":1,"column_end":21}},{"value":"/             // Unprotected load.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14253094,"byte_end":14253130,"line_start":482,"line_end":482,"column_start":1,"column_end":37}},{"value":"/             let mut node = self.head.load(Relaxed, epoch::unprotected());","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14253131,"byte_end":14253208,"line_start":483,"line_end":483,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14253209,"byte_end":14253212,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/             while let Some(n) = node.as_ref() {","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14253213,"byte_end":14253264,"line_start":485,"line_end":485,"column_start":1,"column_end":52}},{"value":"/                 // Unprotected load.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14253265,"byte_end":14253305,"line_start":486,"line_end":486,"column_start":1,"column_end":41}},{"value":"/                 let next = n.next.load(Relaxed, epoch::unprotected());","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14253306,"byte_end":14253380,"line_start":487,"line_end":487,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14253381,"byte_end":14253384,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/                 // Take ownership of the node, then drop its data and deallocate it.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14253385,"byte_end":14253473,"line_start":489,"line_end":489,"column_start":1,"column_end":89}},{"value":"/                 let mut o = node.into_owned();","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14253474,"byte_end":14253524,"line_start":490,"line_end":490,"column_start":1,"column_end":51}},{"value":"/                 ManuallyDrop::drop(&mut o.data);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14253525,"byte_end":14253577,"line_start":491,"line_end":491,"column_start":1,"column_end":53}},{"value":"/                 drop(o);","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14253578,"byte_end":14253606,"line_start":492,"line_end":492,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14253607,"byte_end":14253610,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/                 node = next;","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14253611,"byte_end":14253643,"line_start":494,"line_end":494,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14253644,"byte_end":14253661,"line_start":495,"line_end":495,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14253662,"byte_end":14253675,"line_start":496,"line_end":496,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14253676,"byte_end":14253685,"line_start":497,"line_end":497,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14253686,"byte_end":14253691,"line_start":498,"line_end":498,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14253692,"byte_end":14253699,"line_start":499,"line_end":499,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14253700,"byte_end":14253703,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: super::Atomic","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14253704,"byte_end":14253733,"line_start":501,"line_end":501,"column_start":1,"column_end":30}},{"value":"/ [`defer`]: Guard::defer","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14253734,"byte_end":14253761,"line_start":502,"line_end":502,"column_start":1,"column_end":28}},{"value":"inline","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14253762,"byte_end":14253771,"line_start":503,"line_end":503,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":889},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/default.rs","byte_start":14310117,"byte_end":14310120,"line_start":31,"line_end":31,"column_start":8,"column_end":11},"name":"pin","qualname":"::default::pin","value":"fn pin() -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the current thread.\n","sig":null,"attributes":[{"value":"/ Pins the current thread.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/default.rs","byte_start":14310071,"byte_end":14310099,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/default.rs","byte_start":14310100,"byte_end":14310109,"line_start":30,"line_end":30,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":891},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/default.rs","byte_start":14310245,"byte_end":14310254,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"is_pinned","qualname":"::default::is_pinned","value":"fn is_pinned() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current thread is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the current thread is pinned.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/default.rs","byte_start":14310176,"byte_end":14310227,"line_start":35,"line_end":35,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/default.rs","byte_start":14310228,"byte_end":14310237,"line_start":36,"line_end":36,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":893},"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/default.rs","byte_start":14310364,"byte_end":14310381,"line_start":42,"line_end":42,"column_start":8,"column_end":25},"name":"default_collector","qualname":"::default::default_collector","value":"fn default_collector() -> &'static Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the default global collector.\n","sig":null,"attributes":[{"value":"/ Returns the default global collector.","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/default.rs","byte_start":14310315,"byte_end":14310356,"line_start":41,"line_end":41,"column_start":1,"column_end":42}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":4694,"byte_end":4704,"line_start":108,"line_end":108,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14164287,"byte_end":14164307,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14165734,"byte_end":14165742,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14169516,"byte_end":14169517,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14172736,"byte_end":14172742,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14172807,"byte_end":14172813,"line_start":297,"line_end":297,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14172829,"byte_end":14172835,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14173168,"byte_end":14173174,"line_start":314,"line_end":314,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":191},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":203},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14194376,"byte_end":14194382,"line_start":882,"line_end":882,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14194729,"byte_end":14194735,"line_start":894,"line_end":894,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14195023,"byte_end":14195029,"line_start":902,"line_end":902,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14195376,"byte_end":14195382,"line_start":913,"line_end":913,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14195494,"byte_end":14195500,"line_start":919,"line_end":919,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14195895,"byte_end":14195901,"line_start":936,"line_end":936,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14196004,"byte_end":14196010,"line_start":942,"line_end":942,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14196130,"byte_end":14196136,"line_start":948,"line_end":948,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14196485,"byte_end":14196491,"line_start":963,"line_end":963,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14197704,"byte_end":14197709,"line_start":1004,"line_end":1004,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14198216,"byte_end":14198221,"line_start":1027,"line_end":1027,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14199871,"byte_end":14199876,"line_start":1087,"line_end":1087,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14201546,"byte_end":14201551,"line_start":1150,"line_end":1150,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14201741,"byte_end":14201746,"line_start":1159,"line_end":1159,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14202024,"byte_end":14202029,"line_start":1170,"line_end":1170,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14202170,"byte_end":14202175,"line_start":1176,"line_end":1176,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14202368,"byte_end":14202373,"line_start":1185,"line_end":1185,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14202539,"byte_end":14202544,"line_start":1192,"line_end":1192,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14202634,"byte_end":14202639,"line_start":1198,"line_end":1198,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14203112,"byte_end":14203117,"line_start":1217,"line_end":1217,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14203227,"byte_end":14203232,"line_start":1223,"line_end":1223,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14203354,"byte_end":14203359,"line_start":1229,"line_end":1229,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14203465,"byte_end":14203470,"line_start":1235,"line_end":1235,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14203971,"byte_end":14203977,"line_start":1252,"line_end":1252,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14204151,"byte_end":14204157,"line_start":1261,"line_end":1261,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14204212,"byte_end":14204218,"line_start":1263,"line_end":1263,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14204464,"byte_end":14204470,"line_start":1278,"line_end":1278,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14205101,"byte_end":14205107,"line_start":1301,"line_end":1301,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14212064,"byte_end":14212070,"line_start":1525,"line_end":1525,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14212633,"byte_end":14212639,"line_start":1547,"line_end":1547,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14212766,"byte_end":14212772,"line_start":1553,"line_end":1553,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14212846,"byte_end":14212852,"line_start":1555,"line_end":1555,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14213017,"byte_end":14213023,"line_start":1561,"line_end":1561,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14213171,"byte_end":14213177,"line_start":1567,"line_end":1567,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14213480,"byte_end":14213486,"line_start":1578,"line_end":1578,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14213677,"byte_end":14213683,"line_start":1584,"line_end":1584,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14214920,"byte_end":14214929,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14214954,"byte_end":14214963,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14214985,"byte_end":14214994,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14215108,"byte_end":14215117,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14215359,"byte_end":14215368,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14215566,"byte_end":14215575,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14215703,"byte_end":14215712,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14215886,"byte_end":14215895,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14216006,"byte_end":14216017,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14216477,"byte_end":14216488,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14216635,"byte_end":14216646,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/deferred.rs","byte_start":14227389,"byte_end":14227397,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/deferred.rs","byte_start":14227521,"byte_end":14227529,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/epoch.rs","byte_start":14231389,"byte_end":14231394,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/epoch.rs","byte_start":14233198,"byte_end":14233209,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14237089,"byte_end":14237094,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14250612,"byte_end":14250617,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14250787,"byte_end":14250792,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14254076,"byte_end":14254088,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":14257161,"byte_end":14257164,"line_start":71,"line_end":71,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":14257174,"byte_end":14257177,"line_start":73,"line_end":73,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":14258126,"byte_end":14258129,"line_start":108,"line_end":108,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":14261403,"byte_end":14261406,"line_start":193,"line_end":193,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":14261805,"byte_end":14261808,"line_start":205,"line_end":205,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":14262235,"byte_end":14262244,"line_start":223,"line_end":223,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":14262254,"byte_end":14262263,"line_start":225,"line_end":225,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":14262945,"byte_end":14262951,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":14268075,"byte_end":14268080,"line_start":387,"line_end":387,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":14276805,"byte_end":14276810,"line_start":611,"line_end":611,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/list.rs","byte_start":14282875,"byte_end":14282880,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/list.rs","byte_start":14283016,"byte_end":14283021,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/list.rs","byte_start":14283534,"byte_end":14283538,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/list.rs","byte_start":14286121,"byte_end":14286125,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/list.rs","byte_start":14286657,"byte_end":14286661,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/queue.rs","byte_start":14296482,"byte_end":14296487,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/queue.rs","byte_start":14296524,"byte_end":14296529,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/queue.rs","byte_start":14296545,"byte_end":14296550,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":763},{"krate":0,"index":767},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/queue.rs","byte_start":14302470,"byte_end":14302475,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/lib.rs","byte_start":4694,"byte_end":4704,"line_start":108,"line_end":108,"column_start":17,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":34},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14164287,"byte_end":14164307,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":100},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14165734,"byte_end":14165742,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":2,"index":47377},"to":{"krate":0,"index":110}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14169516,"byte_end":14169517,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":137},"to":{"krate":0,"index":127}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14172736,"byte_end":14172742,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14172807,"byte_end":14172813,"line_start":297,"line_end":297,"column_start":59,"column_end":65},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14172829,"byte_end":14172835,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14173168,"byte_end":14173174,"line_start":314,"line_end":314,"column_start":29,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14194376,"byte_end":14194382,"line_start":882,"line_end":882,"column_start":44,"column_end":50},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14194729,"byte_end":14194735,"line_start":894,"line_end":894,"column_start":46,"column_end":52},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":10125}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14195023,"byte_end":14195029,"line_start":902,"line_end":902,"column_start":39,"column_end":45},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14195376,"byte_end":14195382,"line_start":913,"line_end":913,"column_start":41,"column_end":47},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14195494,"byte_end":14195500,"line_start":919,"line_end":919,"column_start":48,"column_end":54},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14195895,"byte_end":14195901,"line_start":936,"line_end":936,"column_start":26,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14196004,"byte_end":14196010,"line_start":942,"line_end":942,"column_start":21,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14196130,"byte_end":14196136,"line_start":948,"line_end":948,"column_start":57,"column_end":63},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14196485,"byte_end":14196491,"line_start":963,"line_end":963,"column_start":28,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14197704,"byte_end":14197709,"line_start":1004,"line_end":1004,"column_start":44,"column_end":49},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":246},"to":{"krate":0,"index":242}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14198216,"byte_end":14198221,"line_start":1027,"line_end":1027,"column_start":9,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14199871,"byte_end":14199876,"line_start":1087,"line_end":1087,"column_start":29,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14201546,"byte_end":14201551,"line_start":1150,"line_end":1150,"column_start":38,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14201741,"byte_end":14201746,"line_start":1159,"line_end":1159,"column_start":44,"column_end":49},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14202024,"byte_end":14202029,"line_start":1170,"line_end":1170,"column_start":26,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14202170,"byte_end":14202175,"line_start":1176,"line_end":1176,"column_start":39,"column_end":44},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":3398}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14202368,"byte_end":14202373,"line_start":1185,"line_end":1185,"column_start":42,"column_end":47},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":3411}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14202539,"byte_end":14202544,"line_start":1192,"line_end":1192,"column_start":21,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14202634,"byte_end":14202639,"line_start":1198,"line_end":1198,"column_start":26,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14203112,"byte_end":14203117,"line_start":1217,"line_end":1217,"column_start":43,"column_end":48},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2776}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14203227,"byte_end":14203232,"line_start":1223,"line_end":1223,"column_start":46,"column_end":51},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":2779}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14203354,"byte_end":14203359,"line_start":1229,"line_end":1229,"column_start":42,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14203465,"byte_end":14203470,"line_start":1235,"line_end":1235,"column_start":42,"column_end":47},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":246},"to":{"krate":2,"index":3079}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14203971,"byte_end":14203977,"line_start":1252,"line_end":1252,"column_start":39,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14204151,"byte_end":14204157,"line_start":1261,"line_end":1261,"column_start":38,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":3189}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14204212,"byte_end":14204218,"line_start":1263,"line_end":1263,"column_start":44,"column_end":50},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":300},"to":{"krate":0,"index":242}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14204464,"byte_end":14204470,"line_start":1278,"line_end":1278,"column_start":13,"column_end":19},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14205101,"byte_end":14205107,"line_start":1301,"line_end":1301,"column_start":33,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14212064,"byte_end":14212070,"line_start":1525,"line_end":1525,"column_start":28,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14212633,"byte_end":14212639,"line_start":1547,"line_end":1547,"column_start":62,"column_end":68},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14212766,"byte_end":14212772,"line_start":1553,"line_end":1553,"column_start":36,"column_end":42},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2836}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14212846,"byte_end":14212852,"line_start":1555,"line_end":1555,"column_start":63,"column_end":69},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2877}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14213017,"byte_end":14213023,"line_start":1561,"line_end":1561,"column_start":37,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":2867}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14213171,"byte_end":14213177,"line_start":1567,"line_end":1567,"column_start":44,"column_end":50},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14213480,"byte_end":14213486,"line_start":1578,"line_end":1578,"column_start":46,"column_end":52},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":10125}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/atomic.rs","byte_start":14213677,"byte_end":14213683,"line_start":1584,"line_end":1584,"column_start":41,"column_end":47},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":300},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14214920,"byte_end":14214929,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14214954,"byte_end":14214963,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14214985,"byte_end":14214994,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14215108,"byte_end":14215117,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14215359,"byte_end":14215368,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14215566,"byte_end":14215575,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14215703,"byte_end":14215712,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14215886,"byte_end":14215895,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2836}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14216006,"byte_end":14216017,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14216477,"byte_end":14216488,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":387},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/collector.rs","byte_start":14216635,"byte_end":14216646,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":387},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/deferred.rs","byte_start":14227389,"byte_end":14227397,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":420},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/deferred.rs","byte_start":14227521,"byte_end":14227529,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/epoch.rs","byte_start":14231389,"byte_end":14231394,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/epoch.rs","byte_start":14233198,"byte_end":14233209,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":829},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14237089,"byte_end":14237094,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14250612,"byte_end":14250617,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":475},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14250787,"byte_end":14250792,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":475},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/guard.rs","byte_start":14254076,"byte_end":14254088,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":500},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":14257161,"byte_end":14257164,"line_start":71,"line_end":71,"column_start":22,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":14257174,"byte_end":14257177,"line_start":73,"line_end":73,"column_start":6,"column_end":9},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":589},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":14258126,"byte_end":14258129,"line_start":108,"line_end":108,"column_start":18,"column_end":21},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":14261403,"byte_end":14261406,"line_start":193,"line_end":193,"column_start":15,"column_end":18},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":14261805,"byte_end":14261808,"line_start":205,"line_end":205,"column_start":21,"column_end":24},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":14262235,"byte_end":14262244,"line_start":223,"line_end":223,"column_start":22,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":836},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":14262254,"byte_end":14262263,"line_start":225,"line_end":225,"column_start":6,"column_end":15},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":836},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":14262945,"byte_end":14262951,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":14268075,"byte_end":14268080,"line_start":387,"line_end":387,"column_start":6,"column_end":11},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/internal.rs","byte_start":14276805,"byte_end":14276810,"line_start":611,"line_end":611,"column_start":27,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":619},"to":{"krate":0,"index":678}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/list.rs","byte_start":14282875,"byte_end":14282880,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":843},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/list.rs","byte_start":14283016,"byte_end":14283021,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/list.rs","byte_start":14283534,"byte_end":14283538,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/list.rs","byte_start":14286121,"byte_end":14286125,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":847},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/list.rs","byte_start":14286657,"byte_end":14286661,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":683},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/queue.rs","byte_start":14296482,"byte_end":14296487,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":864},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/queue.rs","byte_start":14296524,"byte_end":14296529,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":864},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/queue.rs","byte_start":14296545,"byte_end":14296550,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rychmc/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.9/src/sync/queue.rs","byte_start":14302470,"byte_end":14302475,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":864},"to":{"krate":2,"index":3422}}]}